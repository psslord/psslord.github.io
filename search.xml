<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>科学上网搭建方法</title>
      <link href="/2022/07/18/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/"/>
      <url>/2022/07/18/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>声明：为了自主维护国内网络环境安全，请大家在享受上网的快乐时能够恪守好自己的底线，不要干违法犯罪的事情。谨记一条：要想人不知，除非己莫为！！！不要到了最后才追悔莫及。我们坚信：网络永远都不是法外之地。</strong></p><h2 id="为什么要“科学上网”？"><a href="#为什么要“科学上网”？" class="headerlink" title="为什么要“科学上网”？"></a>为什么要“科学上网”？</h2><h3 id="有感而发"><a href="#有感而发" class="headerlink" title="有感而发"></a>有感而发</h3><p>众所周知，国内外网络之间有一堵“墙”的存在，那也是我们很多时候不能直接访问国外网站的根本原因。首先，对于普通人来说，这堵“墙”的存在根本不影响我们正常的上网需求。在此，我必须声明一点：国外的月亮并没有我们想象的那么圆！！！国外的网络上并没有特别稀奇古怪的东西，反而偏见到显得很严重（就我自己所看到的而言，外面充斥着各种反华言论，而且里面的论据绝大部分都是他们捏造和凭空想象的，因此去看完全是玷污自己的眼球和三观，纯属自己给自己找恶心！！！虽然国内有着很多待发展和完善的地方，但我们要站在自己国家的立场上想想，外面的世界是残酷的，人与人是这样，国与国也更是这样。作为我们普通人来说，我们还可以找一个真心朋友说说真心话，但国与国之间只有利益。而在利益面前，只有强大才是永恒的真理。所以国家为了更好地保护好我们，只有让自己不断变得更加强大。而在变强的过程中，她是孤独的，也肯定会犯一些错误。然而，作为她的儿女，我们必须得对自己国家多一点宽容和时间，通过正规渠道及时帮她纠正错误，共同缔造属于中华民族的神话!!!</p><h3 id="翻过去有什么用？"><a href="#翻过去有什么用？" class="headerlink" title="翻过去有什么用？"></a>翻过去有什么用？</h3><p>首先，如果能够实现“科学上网”，你能浏览国外大部分网站（国内网站已经做的很好了，基本需求都可以被满足，国外也没有比国内好多少，外国的月亮并不比国内的圆）。本人由于学习需要，需要经常上<a href="%5BGitHub%5D(https://github.com/)">Github</a>上面去学习（搬运）代码，为了学习过程更加流畅和稳定，就产生了翻“墙”的需求。市面上虽然会有很多“梯子”售卖，但大多不稳定和不安全，因此，本人开始学习自己搭建梯子。本文是一个分享贴，也是自我学习的记录贴（其中记载了自己趟过的不少坑）。话不多说，咱们直接开始。</p><h1 id="如果搭建属于自己的“梯子”？"><a href="#如果搭建属于自己的“梯子”？" class="headerlink" title="如果搭建属于自己的“梯子”？"></a>如果搭建属于自己的“梯子”？</h1><p>首先，搭建属于自己的“梯子”需要下列几步：</p><ol><li><a href="#%E8%B4%AD%E4%B9%B0VPS%EF%BC%88%E5%9B%BD%E5%A4%96%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89">购买VPS（国外服务器）</a></li><li><a href="#%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D">购买域名</a></li><li><a href="#%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83%EF%BC%88%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%EF%BC%89">部署环境（服务器端）</a></li><li><a href="#%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE">使用“梯子”（客户端）</a></li></ol><h2 id="购买VPS（国外服务器）"><a href="#购买VPS（国外服务器）" class="headerlink" title="购买VPS（国外服务器）"></a>购买VPS（国外服务器）</h2><p>我们需要购买一台服务器搭载我们的“梯子“项目。为了更加方便地完成项目，我们建议直接购买”墙“外的服务器（推荐香港）。然而现在服务器商也有很多，因此同等配置下，不同服务器商的价格也大不相同。怎么去选适合自己的就因人而异，不过我们建议新手还是选择国内大品牌的(理由很简单，实在折腾不成功可以申请退款，退款快也方便，这一点就很帅)。配置的话，我建议新手选个低配先玩玩就行，后面看需求升级配置，系统我选的（CentOS）。</p><p>购买完服务器后在服务器商的控制台上找到所购买的服务器，需要使用远程登陆软件（我使用的putty，进入<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/">putty官网</a>下载安装即可）（备注，建议先在控制台重置密码，重置密码后直接使用putty连接服务器即可</p><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>为了更好地伪装我们的”梯子“，我们需要购买一个国内的域名（国外的价格贵，流程麻烦，转回国内还需要一大笔钱，别问我是怎么知道的，我只知道我的钱包又空了一大截），建议直接在同一服器商下购买，他会赠送一些服务，后面会省不少事。追求性价比的选个便宜的就行，一般10快左右就可以买一年了，相当便宜了。</p><p>购买完域名进入直接在控制台搜索DNS解析，然后进入选择添加域名，输入你所购买的域名，然后确定。然后选中你的域名，点击解析，不同服务器商弹出来的页面可能不一致，不过通常都是使用DNSPod解析或云解析，随便选一个就行点进去，然后选择快速添加解析，选择网站解析，网站地址中选择轻量应用服务器，输入你的服务器ip就行。最好接下来点一下ssl跟着提示正常提示申请一下ssl证书，选择免费证书就行。</p><h2 id="部署环境（服务器端）"><a href="#部署环境（服务器端）" class="headerlink" title="部署环境（服务器端）"></a>部署环境（服务器端）</h2><p>使用putty连接上服务器，具体怎么连接百度一下就行，过程贼简单，这就不多赘述。连上服务器后，我们可以跟着V2ray官网<a href="https://www.v2ray.com/">Project V · Project V 官方网站 (v2ray.com)</a>（不过被”墙了，需要通过“科学上网”的方式才能查看），不过接下来我会介绍主要的流程。</p><h3 id="同步时间"><a href="#同步时间" class="headerlink" title="同步时间"></a>同步时间</h3><p>这个很重要，建议一开始就进行，将服务器时间设为北京时间。具体做法为，在putty中输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date 查看当前服务器时间</span><br><span class="line">yum -y install nptdate  安装nptdate</span><br><span class="line">ntpdate -u 210.72.145.44  同步时间，210.72.145.44：中国国家授时中心的官方服务器</span><br><span class="line">date  查看修改后的时间是否为你电脑一致</span><br></pre></td></tr></table></figure><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p>安装相关依赖软件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum makecache</span><br><span class="line">yum install curl</span><br></pre></td></tr></table></figure><p>下载主程序安装脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh</span><br></pre></td></tr></table></figure><p>执行安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash install-release.sh</span><br></pre></td></tr></table></figure><p>等待安装结束，期间可能会有各种错误出来。本人建议把错误直接复制到百度即可解决绝大部分错误，本人亲测方便有效。解决完错误再重新安装就行，这个过程有可能是短暂的，有可能是煎熬的。安装成功后会出现以下界面，到这，恭喜你，成功一大半了。</p><p><img src="/2022/07/18/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/1.png"></p><p>运行v2ray</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start v2ray</span><br><span class="line">systemctl enable v2ray 设置开机自启动</span><br></pre></td></tr></table></figure><p>查看v2ray是否运行成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status v2ray</span><br></pre></td></tr></table></figure><p>出现以下界面即可运行成功，特别注意显示Active :active(running)才是正常运行状态</p><p><img src="/2022/07/18/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/2.png"></p><h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><p>输入命令行<code>v2ray</code>即可出现下列界面，然后输入对应的数字即可完成对应的命令!</p><p><img src="/2022/07/18/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/3.png"></p><p>我们选择修改 V2Ray 配置中的修改 V2Ray 传输协议，然后选择其中一种协议即可（并不是所有的协议都可用，这里建议多试几个），具体操作就是输入2–&gt;2–&gt;输入你选择的协议数字</p><p>选择好协议后输入<code>v2ray  URL</code>,即可生成url，把它复制下来，后面有用</p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>进入v2ray官网<a href="https://www.v2ray.com/awesome/tools.html">神一样的工具们 · Project V 官方网站 (v2ray.com)</a>下载V2RayN，或者直接百度下载V2RayN应该也可以。下载后解压到一个文件夹，找到文件夹内的v2rayn.exe文件，双击打开，在左上角服务器栏选择从剪切板导入批量URL，导入后你就能查看你的服务器了，然后在主界面选中你的服务器，右键选择测试服务器速度，如果后面显示出有网速，那么恭喜你，大功告成了！右键v2ray小图标，选择服务器，选择自动配置系统代理就可以“科学上网”了。（每次退出的时候记得清除系统代理）</p><p>（plus：手机端也可以使用，下载v2rayNG安装到手机，然后也是导入URL就行）</p><p>避坑建议：</p><ol><li>测试服务器网速时显示0M/s，去前面更换协议就行，多试几个</li><li>在购买的服务器上把常用的端口都打开，具体做法百度以下就行，很简单，在域名管理里面的防火墙设置里面</li><li>实在搞不出来的可以多看看其他博客，相互映照，也可以给自己放个假，隔两天再来。不要害怕失败，我当初也是搞了十几天才成功搭建出来的，当初我也是一个纯小白入手，遇到的坑数不胜数，回想起来都一脸辛酸泪呀，不过这个过程还是很有意义的，很能锻炼我们自主学习的能力的。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 自主学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> self-learning、科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+butterfly博客学习</title>
      <link href="/2022/07/14/hexo+butterfly%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/07/14/hexo+butterfly%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="第一部分：完成一个博客上传"><a href="#第一部分：完成一个博客上传" class="headerlink" title="第一部分：完成一个博客上传"></a>第一部分：完成一个博客上传</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>首先的在一个空文件夹里面初始化hexo环境，具体做法：点开空文件夹，鼠标右键点击git bash here，然后输入命令 hexo init和hexo install即可完成环境初始化。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">hexo install</span><br></pre></td></tr></table></figure><h2 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h2><p>完成初始化后我们转到所在目录即可进行接下来的操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd +目录名</span><br></pre></td></tr></table></figure><p>接下来我们新建一个博客，输入命令“hexo new 第一篇博客”即可生成初始文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new 第一篇博客</span><br></pre></td></tr></table></figure><h2 id="博客内容"><a href="#博客内容" class="headerlink" title="博客内容"></a>博客内容</h2><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: test</span><br><span class="line">date: 2022-07-14 16:53:45</span><br><span class="line">tags: self-learning </span><br><span class="line">categories:</span><br><span class="line">- learning</span><br><span class="line">---</span><br><span class="line">摘要名称</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">接下来是文章摘要的正文内容</span><br></pre></td></tr></table></figure><p>包括博客里面重要的内容，如题目、作者、分类、标签等，这里需要注意的是空格，即在标点后面需要添加空格，如冒号： 空格 。这部分还可以添加文章的摘要，添加格式如上所述。</p><h3 id="资源引用"><a href="#资源引用" class="headerlink" title="资源引用"></a>资源引用</h3><p>当引用图片或其他形式的资源等，有以下两种方式解决：</p><p>1.使用绝对路径引用</p><p>2.使用相对路径引用</p><p>使用相对路径引用资源的时候，我们可以使用hexo提供的资源文件夹功能。</p><p>打开根目录下的_config.yml文件,将post_asset_folderde的值设为true</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>修改之后会开启 Hexo 的文章资源文件管理功能。Hexo 将会在我们每一次通过 <code>hexo new &lt;title&gt;</code> 命令创建新文章时自动创建一个同名文件夹，于是我们便可以将文章所引用的相关资源放到这个同名文件夹下，然后通过相对路径引用。例如，你把一个 <code>example.jpg</code> 图片放在了这个同名文件夹中，使用相对路径的常规 markdown 语法 <code>![](./example.jpg)</code>即可访问 。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](./式28.jpg)</span><br></pre></td></tr></table></figure><h2 id="文章上传"><a href="#文章上传" class="headerlink" title="文章上传"></a>文章上传</h2><h2 id="本地查看"><a href="#本地查看" class="headerlink" title="本地查看"></a>本地查看</h2><p>运行下列语句</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo cl或者hexo c或者hexo clean</span><br><span class="line">hexo g或者hexo generate(可省略)</span><br><span class="line">hexo s或者hexo server</span><br></pre></td></tr></table></figure><p>接下来访问它出现的<a href="http://localhost:4000/">网址</a>即可查看最新更改的内容</p><h2 id="上传GitHub"><a href="#上传GitHub" class="headerlink" title="上传GitHub"></a>上传GitHub</h2><p>运行下列语句即可完成上传</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo cl或者hexo c或者hexo clean</span><br><span class="line">hexo g或者hexo generate</span><br><span class="line">hexo d或者hexo deploy</span><br></pre></td></tr></table></figure><p>上传后有延迟，需要等待几分钟后刷新网页才会出现新更改的内容。</p><p>PLus：上传的时候用校园网一直上传不上去，改用手机热点即可上传成功！！</p><hr><h1 id="第二部分：文章加密"><a href="#第二部分：文章加密" class="headerlink" title="第二部分：文章加密"></a>第二部分：文章加密</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p><code>npm install --save hexo-blog-encrypt</code></p><h2 id="设置配置文件"><a href="#设置配置文件" class="headerlink" title="设置配置文件"></a>设置配置文件</h2><ol><li><p>首先在站点配置文件中启动该插件，即打开根目录下的_congfig.yml文件修改以下选项</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure></li><li><p>然后再在front-matter中添加对应的字段，如password，abstract，message等</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 文章加密</span><br><span class="line">date: 2019-01-04T22:20:13.000Z</span><br><span class="line">category: 教程</span><br><span class="line">tags:</span><br><span class="line">  - 博客</span><br><span class="line">  - Hexo</span><br><span class="line">keywords: 博客文章密码</span><br><span class="line">password: TloveY</span><br><span class="line">abstract: 密码：TloveY</span><br><span class="line">message:  输入密码，查看文章</span><br></pre></td></tr></table></figure><ul><li>keyword: 关键字</li><li>password：密码</li><li>abstract：文章摘要</li><li>message：博客查看时，密码输入框上面的描述性文字</li></ul><hr><h1 id="第三部分：更改主题"><a href="#第三部分：更改主题" class="headerlink" title="第三部分：更改主题"></a>第三部分：更改主题</h1><p>##butterfly<br>其实最好的使用提示就是查看其官方文档<a href="https://butterfly.js.org/">Butterfly</a></p><p>这里面已经很详细了，不过我在这还是简单地介绍一下大致流程可以帮我们更好地理解和使用。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>Git安装（GitHub）（稳定版）</p><p>在根目录下打开命令行或者右键选择Git Bash Here,接下来输入下列命令</p><p><code>git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</code></p></li><li><p>Git安装（Gitee）（稳定版）</p><p>在根目录下打开命令行或者右键选择Git Bash Here,接下来输入下列命令</p><p><code>git clone -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</code></p></li></ol><p>3.npm安装<br>   在根目录下打开命令行或者右键选择Git Bash Here,接下来输入下列命令<br>   <code>npm i hexo-theme-butterfly</code></p><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p>修改根目录下的_config.yml文件，把主题改为butterfly<br>   <code>theme:butterfly</code></p><h3 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h3><p>建议把这两条命令都运行一次</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><h3 id="升级建议"><a href="#升级建议" class="headerlink" title="升级建议"></a>升级建议</h3><p>在根目录下创建_config.butterfly.yml文件，并把themes文件夹下的butterfly子文件中的_congfig.yml内容复制到所创建的_config.butterfly.yml文件中去，注意这里的_config.yml文件不是根目录下的那个。完成后hexo会自动合并主题中的_config.yml文件和_config.butterfly.yml（优先级更高）文件中的配置</p><h3 id="主题使用建议pages"><a href="#主题使用建议pages" class="headerlink" title="主题使用建议pages"></a>主题使用建议pages</h3><p>详细阅读_config.butterfly.yml文件中的内容，里面重要的设置都有备注，不懂的地方可以跟着官方文档<a href="https://butterfly.js.org/posts/dc584b87/">butterfly</a>过一遍应该就差不多懂了</p><h1 id="自定义博客封面和背景"><a href="#自定义博客封面和背景" class="headerlink" title="自定义博客封面和背景"></a>自定义博客封面和背景</h1><p>有两种方式可以设置封面和背景，一种是在_congfig.butterfly.yml文件里修改，另一种是在每个博客的front-matter中定义，在这我推荐第二种方式，可以每篇文章设置不同的封面和背景</p><p>在front-matter中添加内容如下：</p><ul><li><p><code>top_img: 图片地址</code>  博客顶端背景</p></li><li><p><code>cover: 图片地址</code>文章封面</p></li></ul><h1 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h1><p>为了方便更好地访问我们的博客，我们可以在国内买一个域名（便宜的几块钱一年）绑定到我们的github上即可，具体步骤如下：</p><ol><li><p>在GitHub上打开你博客的所在项目，然后在setting–&gt;pages–&gt;custom domain输入你购买的域名，然后save即可</p></li><li><p>在根目录下的source文件夹下新建一个CNAME文件（没有后缀名），然后把你的域名填进去就行</p></li><li><p>修改根目录下的_config.yml文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">skip_render: CNAME</span><br></pre></td></tr></table></figure></li></ol><p>之后正常上传就好了</p>]]></content>
      
      
      <categories>
          
          <category> 自主学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> self-learning、博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
