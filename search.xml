<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Days-of-22-9</title>
      <link href="/2022/09/01/Day-on-Day/"/>
      <url>/2022/09/01/Day-on-Day/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="72a0a032b6bba014b0f52ca97d7b7e4295a1afc2859376862f46c2638b424dd6">ebea08a7d91b01b7893d00b6f779697398f71261f1a760f9190cc571d9937260ea5185c7b24aace7618369e6b6211d2d4f89cb95ca0f74c27dea212e836616d1433b133070f349d321194db05fc2d31352f9c13366315118df0fd9c06062d65084285b51732b5d2d18137477c719fa9c9d0416912a2a1e3ad241c086e231b404bdabfa0c142a2a74e85e04ab981de9df9fd9e8b454c76e9e51b1f9e25cce65d9371b54038a16eebfae92f084ff8f070c7464086a7926b11899a98ce894cf20216dd84c6e6368c6aab252816cbda8c93b39326fe722dbb8537e9a0b38d873e782e3998dc31bba37e5f0e69f07013fa8fb73a5deba31133e11b15ed9e889574709b5797c827ade2f45b189f0599096c4a337c34ae95ebdc59ad8ac9115bfcab83568ad2ab131eadd68d96b71257287fff289e8a89c41bc292c77d5c1550a87766f7e0556fa0b0449a71565d5c8e981203f65ab5a2cf85b0006fb81288e97761fb89233c10bb1bdac034d95e063c5768b6333cb787858b697d9ef9b8a071390afa08618e5321f986770256b181e9348fb87ecfd4361f1a4ce89e20dd39a9c63cc6a8bc833756dfb2066a355e5bd3a8ffdc6843348d76a9ac5bd09d589eb48c375bd5b353c605891af359332564463598f3a0b960fc977d6f2ce934da3b93773666968b71f51ad8533b8abf58a31e1683983e3ba333ff3bcf653ae6a06aacd3ab672effb85506b42cb23d1928bbdca3acbf11e5a7f12d6ca656c6c313f6b7601f9eb790ce2649888448b6f4d5e72a8a107c11d5e249da173e40aa158fc713ac108243dc25bf25b3422ca5cbd0a697195e4bf5bc6f9d031370188e47e82c32f5a06bb8899260733246620426ba2db30910b3fcdb7437191f478eac8f7771fd0bac966a6d75784f7076ddc0071627bcb0917cb36c284994bff89c9d7894ca2ded1528cfc3e3910ec8e3021f4a4b86ca25d9e87165e5814beef191e52618e20c5eb6fb3fe3db22d133c65b66ce09be735f6a9f4324b45d262290e41e4203f2eb91df86905336a10d419b2c93217c3d5d6e16c02ebb76ab7c7c2f7831611b2e0be73c6adfc5fbfd31d92f8b37da9ea761566abc8bfb2e835fcad141b30bfdb5ea50829faa9a543f75c4ac75376f29b9d0ce3dca8cb1c292bfa208003578ba2dee56f6cb9f2cc529b9fe61eb65bcf9ccd261e7312437c58ecd9b2536148ff74ec9987035edb7f9c8108f737f59c4c8e7fc0d625ae04c7e876fd02cafa4537322f654997a352e90a6c624e6cd7d9e670c9604f577483fc1b127f6f8affc81e91538df7369c19f6d68d5ba83ccd2b1c8063d075966e7fb31e5fd14dd32ff218d4b0e59b4f6fe1a533cdc888293a6faf6b6fb55278d24086b3909857973882784a7612a76385da94e8b597be44919d64ab815c5a56394a46a0c2fee911e994f9d53d3584bf0a5befb1bff8b804db263cba11094b447c0b07f0fd024dba54a0b7acce3bb8566a019fc22336690088a3198141b4b45600ef694a85a1e529d81deb0038e09239225765994c0315210b23d4b882a192b1f5aa05c46887063b704b1791f4cb38710c870d1de5e26461b8f180df1507d52be306ffb9a55d67574685f25b3a390381cf73707a29200596c66534316f72af982b8c02768bdeacd5125e06513e20e9963dd36bb705dd380b24134109a56b8ea149b613499fd2a92d6bb19734f912055266524947f9f962c9b323d1ea43e1069dcadccd0f64cd9f85f3470f9c7bd64fb61c47c5759fe88686e3b2978095c2b799ae4711a34e668d1b0ee8bd2978a46eb8c8124d24c085fcbb1639ab59c287662a07bfaf5c350cee7d758624a9a1b43959f5620109bb26b789ad9a2b45a47bc1676302d7667474c289e4f92ada0358beb62c7e5d171c310849e8d88707bcf84fe7501e5b6e2c90f734ad5a63c911ae60fd2022b1025052fac927a78955a167debef47ae5c0a0de2434d7508048d5d7c1c9444bc60d498ba8fe19a3e9c959af6ae28976f25ebb30cd9d18e604b3622cd78133bbc831c6c92b6d363b0946dba385ad169f6f18882bdbfa5da549487572038844b7d4a4013f7128801f098d572b09f822e14acecab03128944a691821623faab56d8573ffdd69deeff74710a8bda87a0664c832c96996d0612a5138b5e9ff2d3dfdbcb5ade42307613f5a8d8dd00eb9a1b3e766d2ae16f340d3cb91f6136f6066886e112a3f8bff1ac834d493c30cb72779623dade77a7e32af19bc34c0ab6a87ff71e412b6b78e3da58741f65e6415c7973d00227a5999d0201bd062a6c544e8065125adea87c648bdfe4f71ab09c0a6dabd81e207b67609cad1aafb1f9d29c2a9322d2f4584b8ff9c60cc79cc83239973ee783ab752dde943c093b9f552cc4e21dff6d159ee7b85b15284ff666867a763937d7df78774f779d3e974df7366e98fbd7758c285b03b9fb19e60c68ed4f7c44af998462d0c52d80974f46cc07c4d2ef922cb572dab1edb7ca1d7a0efb05f010d3b76a4a90b68831682642a96afb8948fa0c85f68db006cc310bb5319628991b5c77fd0221fd204688ff24680f615dd42d422e1a784e14a34952dd59cacd3540ae562dd075d6fc49a4aa763d5b3cb506ce19ef1d44744f8f62d0f8a5a5bab0cfc93f163e7a24643c6d13279e0b7d6891d21aa319dab98227e6307c37947722aee494ee48adab4be6bd8262f4e63119d144ca70a6981dcf9cc4f23ed7525ff1338be1da696a57b71bb29a788160c3bee3e44e952d4efcbf26e5557469fb256090ee8e1c9c66f412326a347481d217dcd2f0ff31b3862c7626f2ec27358a1ab2a95116a894d39b360b65e7d906456cdb6b70d4a86940fc792ed44c44356ec22d17914c97ab3e1b4d05dd570035081ca4aacfc736b84fa6883381ee9fbd12938a1948794d32c5d29154133bf7c363b76a067acbd1919010352fa67f7e78aa23de371b0ccb9b1db75de782d8e8996543131be3d1bf4075755c020b2ed09d9c13894df1b30ed7cb7db1589c3d3ac4a59460dd787b9688c4b1552c75f1862e6f14e3888a506394327944371bae4ab90ababa6fc49bb57fd55fac8f98d1eb1c0221432e5de29928fe2f7d38dcc8b1ecd6ff041c09bb7a34216c7d96b13de676a426a0ff9cd2c886a798f78e4be5a70d125821745b8a67ac67a82e0418910b3c3116d6c50112302e5eace618a039398d179362ebd9ebc3f0d181ef69bf751c095f8354b428b15ea1e211b9a83053449c472f6c3a8d95bbb081a7855e39acf0c6223fda7b4086a4127a5c6071e506a759f2c08402912c45b5fa965dc53ffac7e300c941ff7514ff39f10ad517aab0f58ee4eaed9c1baaea4c92314cd270d620f7ae967e18682ac735c09ef028ab9a77968e2501d486055bb993666827a3b5ebfb0648cc954d0573fc8017bb3c8ec31dbe346741854e7d8d44eda1002c88275d82262e8bed3c79202e4757eb7fdea3fd88c3db36bb39a3589dd4b2ab86311b90b9b929c6998a2d9dced1de49a795ccab6068ae208500c073d9c980eb8d423d428e8544223430744ce24ae62d1209c4e8abd9dc05c079f6adb0093bf1147dba21a42bca126706641f0ca04df33bbc82b00913b17706ea079d91c94fa58dd3ee1b853450bee7ada3bcf6fffe50d94fcca5e49cffe3157aaaf73b4c5685075ed2d603f62b629f50a6935bc06445d3af6dc94488e43f1ab027d3d325210bf6d22d6757027f31b15048f5f4303768aead6a0cf852486c87af796051822eef52767fc66cde473cb36a38d71ba1a55144055db6a27f1caac165810dba27c150beb0a78f346a098b1d3a332f1981bb488fcea4cc0bfd764f966a78effcc45f7e3e9da00b5d581ce919d4115a5c0b4a551620fed74e01d43c78d3a0bd9f43eca934815f34b896d70bbe0bd10f7853102526259a038e1e9f64668f8083499aeb5cfb85ad78605795ce0a7bd89d2606940f1251f12408791134ad63e542910186ce975a57b18b4dd62264428449944896d54a8200e4552722021ad90e99c5c238609d80982014845fe392fd236e3cb63db4ecb66e4baffee84b0bcf30cea03e170b4c21441e248bae7b202cb2f72be1feebeeffbd8e30ba86fbc00b1223f22bde819c2d2a88fac2c146641b79671e83737ec48cc9c8464df3d1c5765e670940012ea6e1bd1696c25fa5d405e8e41e3ba33a617f12b9202516d4c33b0677eb5d382d08a1e67cf096c1c398da01259f60b072b04e1d3ae0c384fc25281c675cd799ca0637835f87ced9fecdae3dfa76bd1db59731fc6931c434f105b9bf20b3f962310fb727139ecc6f4fdd5fc8467cb1a512b32bdf2a82cc70159f1adfb3e8e26d406553a7a0d66425a937a230c7c91b5e349af94fd32907defb510f1bd509a5db4d5d08d330171cde95c1d9cf5f4658ecfa6bd9419833973511aa88e9baf940752e2ba1c6e5ba7dc0829afb2ffe7123b280c9af388fd7b2b0ad7e8ec05e6de8514198f87b6c2d87bdef1faeeacb9604278d0070bda22428ce3502b0df3d406010c469da2760269cfbe38e6469277c1f72cfe18a4c3f98f1cfb0eb721ce3646b84930358b9969126aff2cdd933ab9bd7d06c6ffd020174b21517d6058cc876aecd8bb3f098682c6f09c9a641b92d3b61cd16216088895c082231f753e52db3819fef008de6762f35851d511aff31532853d4ab4ccf2f541a5870c16a0d0de290797ca9c73229db01fb70230f31710e39dcbbf863bfb17b77a8989246db262bd0b4fc5e74dcf088109c21334224c4786a2770146e0a980f438162feb8f2bce54b4adb5693d5f69e3a8a20acaa36cb1304b3e1d13c2b79289140105fbadc67b3a7485772f99400bc89080001c67c2bbfa03a8ab75a2259c054710c74fb124f0faba6e110054b078be79e8c3b0b1da44d3191624c381cc2f03829512cc6e297151d98b5b76b09961ed8cf7e57576378224e38fff10fcf5a8c350bff03524eff35d8e65abf1d21a2248b82611ac5390946d213512f0b87a0822139665f07c738b151d84ef8c791a86ab233291e6a78b7db68715395dc44b7c684d558e478cd69c26a1e1e8f02f85e936774b03dd343c2466f559d38332c41643753fe3d9cbd696c42b7ffbceb4340b0506aded0984b36657d41b30c53997919da83f285274a6af399c8d4c36704f4e6382eb0ea8d1d3326ca109ac4ef5b4357c4eaea4717639409a490a05b54bea2e6803e9becb590ec7a091610b18a80a9f020b9b0891b8a266e7bdfacb8541233ff248810fb85f5f57e8eecf3d4166a835d1b32e6fef0ea4b53f71d5e35869478ce216e46eeafe93dd687d86b5c7ac8ceaa9a1cf8ee4ce2276683f9ace1ecd162cc0e8415d9ce6e21cdfc30fa97f27dcec619c604e1f8ac81f47409bf2e26e94b03888d36360f8216c0a2fba707952a16bb1493c46b3d87f2ab0e2b738a5eaf82d3cd02cd1d01846fa7fc5394d47ac25527fba018e60f23c31eaf6a12fc84662e726d599ae68adce057e22c55e27c9322637a3f0dc3859f3c6c3fa080cba22ca35fdec5d7733bf254713c4e2401f7eca1dbc530285bcb547d6bf2edf46f26bcf7a0c65b45edc4fec70a9f8b7664fb7a75e6c48843acaa15a19e7f8822bc270c5a8e99a1d7c956507bebab724f03ac6d93979eb094957bc41a9bafc20ab46e621a1fb04ea57f2447e0e5ad820623c42ae801d63957a3a7fbe098fd167038ede4ed333e41cd1634cbd9bf4e251e22baf405eb08de7143380662aa1e7982a8d54a74d6b7dd4b0bd141d115cf8e34ba2c826a84908bac2fad2626d6474c07f7fc8e8a0667f6c5948a46e468e883870741d0c954e3f2501aadf43f7f9a8cfddb66160bf5a327b09a82fa658983a030cf63173cbfd1282af890181101e3c734084eb4abdb13ac9086cd50367e386803dae3c9c1cd1291a95b9c0dfaae779f6c6db25dc761af188748eba34344d8b00609f438cf049bed16276d1662820546393b7f371d5a5087859f42ee8f9882e15ca10af95192f6a05a74cf7391cff19df2d7bbb0a5c41bffe9a89e02bf1206603440b0348b66dcc659759266cdef2e36c953dfeb56be33955a529f7c3b311d9515defed9df68d6f4b5843f2a5dc9668adeccf979a593ec2db6b3f6d1355c5cc605ee7c170d084a1ca37010b39b1311fcabb500c3001130bb6de9cfcd81d4a18deb244412040c4bfd0c382f178e8e529c86c5214da05766256157996d5154971fcf01bf587dd66640ba638b82a97c5725c41dd46597095d4e200521caf862617092c71401988a0e8d2995de228dd73aa9296faddb7201b9f41f517ebeeb601fb3a16d6aa8cc68a2fa91833b154aaaae2858d66b4705ba683aa64df2a295a81f8ea26cbeb38e418c63b6daee19ce8700388809391aebbb521ccf7a66c9a0255f6030a5ee07890b23884fff38126253b7e5cea2e1bf58d47ac27b1c6d2eec97e50bbfe2d881212a52707b204ab03c22c61d13c82ead297789dbeaefadb47ba6d0906cbf03738dba9dfe399b01e980dd1814f6e26584fc3f81a091ee4bfd5b1fe85499835ff99a9d6238e5e8ae1b99035d9e355f303152e6766261bf7d0fa6a8afc4314c46bd1aa2d66555200dba3544b9525c9bf6ddde1329e62ccf1eb75bf06e02ad18cc1b0b36b16a34b7433060ebbb21bdd0c685216a568ea27675255b78ac0120c7572c20e270e77939b479bf3aae0fdc8574df9b48869fdacbf08ed40330d3b635255a0695137d9ba591b3ffdd82cc1aad44266b1688903940bb15bdda70588312c23cc3892aa25180e96d80c3f6c579b766b52f2956f0f39a8e4f01e60b6aa1de545dbde3db039bcb1e99fc6f1a454d5ccb53c188f799de720f096e3e8fb172f85f625a67867da4ad2bb1060b132755edc94a726b307e51c68ce53c6770f3eeb573a5ff46bc87e5eda2a749a47cb80d9d18bcae0b4dee06e437e180f9a58caa084d95a9d505fe5abc5fd9a87c7db09367dc0e6ae094917f87120a47ec75cbe944dd08acee693d5268590d98241937fae978930300f0f97d2e638f20ebe3441d53442a8f51116a2c3d921783264983e3fb5a317ae0eea583d756aa754034652f5ffb6fce229490f513a2a056c8b661a7e5ef86aa1d38d65a2a7f887dff60ac3f62b8b1ace22d609214125b213314459bb311ef41eca7ce9ab30edf82b69e30e730bf7b3942f5ba01f0582135f8c7ba9fc1e053afc01495c8cd8813589bf9bd2ca31948529a53640c89b387dc2527e9392e09e89025eebe389be6285be743146975c6930a5ab0b401c0c553224a986baca1296e46d60d1c953388caf39c636a1a208839c7e93bec57cb994e69b3f17ff89de76831787c463c718a1488a92f2a30ad4a8325f760786af14c41f46350cc6c8368902dc60d5a212fa637e4b1e3604497a1cb2cca16d4a43e27373bd86406dca7ccc46d643984dca6409c2ef4770e1c3875a13291d67a973234f0ca56a765e63fd578d8535d042e5fefe2944df2dc1cfe8f5b5d6501d44bcde20e2f3ea9acfa3761329b2faf00a4ad97e297c6757e7f9123bec00a60df8a369d5df72f232ad36e3e167dfd5f6c4ed14e5dbcbc1d0fee2d33205221dbfe14b9bfdcc1571a52969bdee475c5d57c1a794e1bee71dbb564f74d732181ed6ede4dd3bdf2567f64c9812b4ae38da4c149e705f78d8506963f90991d28b55403505473d660fa53081cc2d9be0f6581ab381e99af30f3aa560b5ad9d01eed46a88343bc02a4fcdf33ad5e829a8b53cc4390e65604ef738b38b51fba26927e066746da2c5b05a355e8e2666fe8b9402b598c31fc493bea1f181ff39b0167fde6ce70e48161f6c58b1460226700d3cc2fc409296b4696b4e795e50eb9bca41843c0ef7acea6ae68908cf32c8d0bfbd58e21e1fde8a65212cb54cf053176f7b9648515b74105b3f2da3f99ff9837d6dac4b3bd0f88a30cf10b042fac27446335f3dc8ea22a71fb9b446b28d6b7705591bfac7b495ded0da256352218443e85777036b180bfc91499996bf3c0c312d9d82b7cd79bf865cd7e30fffe525d36b0e6b21f4400cd6d21020b66ce00d125b7f73d37782090371298df458a1259d31f650dc5d863432fcaf68795a26ff3728b44b1d5757a6079bc03ab0ee9c5651bbe5b786049f8d0fb2b1ebcf125a73ffd8380e1a3bbcdf95326961af583592b658d1f51725799ac56d11fa8cac102ccad1dd781fe5df1fa5f084a1efc5da8abbe9656615b5d5bc816cff7cbd55daca0d5131f39319c5a21c7430fcd60ad4c3ea9da1709c86b1abe27c74ac76593c6d1af90efefbd63078ecd18ee8214902da7a91e2c6e91ebcdf6d3d0a6afe07b31e169ce3c0269bb8e0bdc61d782219b023a2d6be92045a8a9da6841352eca044df89d3f1e19a4388389f1995c9a56d9ba23076d5c6920dfdba7f7357896b207edc3cb50a6e917e70733a200b1261e7fd4d0812d4caf87cf45ac4323d4c824bc5ba715418393479f8544591d23218c587776f0024731a042d546f64ef314739d3f8bc9773b55838f1922118dcd4449b1bc32baabaa6bb1ce26fa2b75f219c4c18e927513694b78f46f62e6ad229130aa319613f3f5eaa14ef93ff7e3537c0e2f9bb7fb604c99365dc09184a1468e72f17794c9fc830f959cd9f600f4c3dc57a30756894ed780759b65574548ed3dc08578c7e5caf4a9a4977c2259774170a5435857f74a2fa76aa61d8e5102dc26719141d7b86fa6839d455fd9b3515766e3cb0326228a5c24b46d13b6b754ce55268967c17ae1b58fab82c119625bcf0dcdf3d1f4ffbcd67d0c55bfd6d7392c9560d3c515be3126e83fa516bea827c363b31b2f31482dfda6fb693130681bed8b8de6ca25267010c6d229c12ae867cca512aceaad1c9a4bf641fe66ba851219aca22d4843a357e8742e379f44698dce0b922cb90b99142e4859e590d7e5f1a9deac2313a0fd721f5bc6aade60ef84a1b53fc584af87c3aa1cc34c201d1c6172f4ebf471c821de51dc888e38ea242cf7e0b4cc9d682199dff6b2898a6a5d99411753e9b2d44a8207933036a4a47d6d559d3815686a6dc163fc04d04bebf4e48ed89938d7bf27b5d9c00b480513eadbf936bd38f6b479ffdb5729ec6e1080ba47afb56e4d9cc0ac2dcadf073fdde713c43789e179e4bba30707690ffa03bf2cff42463e654ddfbaadfbff989ad3e5c8ba128cb7e0653001935fad9049842c5932a2802c79aeedab4c7f7a0f8bd05a0f325d98e751689b8e6de47fbb2bfdaea2011e350fc7e3c7110ac27f0d3829bb711cc44c76799778196f6499299713c5c3f67e76881f37800b2849f0ce787a66bf7b7c90e52c872374b946591f4fe83f35dbf19065e8cefe32dd1370dd9429b4250bb216db9b74fd18727cc4389ce7a2b1148bccb37da1c1eb3e7dfae4f4ad41e4f7662c3d43dd905b03126d7f51f20e9184f0394779bc49faf422529cd70fb49051144d7d0af218a56925d54260a819a5f1b10e7da4a7aac6f7334bb1e7e45e1e98fd3d5e50aa0d4d58aedb70bc8d283955e1633cf115c776237303526223aed09b5bf6445e8c4cdbb9ea3c6d90a2fced720a98318ec990c7f8fc901c1b04e02632de737b9c13e8d78c993f217d869460ce43fdd6a17be01576b528d4a5a538812c403810254cff42e64a1ac6403072de2590e98cafd20b854647e5c1b1a9e77ab708a0a032a28cace502b4c6b3f19d5975d133d24689e060ad80b8fab290ccf3acfc9af0b72a21ac314eff0ab234354a7cdf33c7ad431e2af891814049aab996546d94b950b4ec2c40a651a733078f1525ecaed8c42c1bf632230bd537b387d15722c04fadec78c3b5207809bba0e6908a73ed3fdd90e71f6135ca352b89b45ce911e21f1f540d9210d236b38e00d6642ab74e998a7b8ea9a38d0b9e4760cec71c42204536800a2cd7bcd5317ce5a96b4311516debca1ba17d595026dde232454080dbfe8bd371e80a88a6fa3250540a882d6546e4059342c44bd4a0bbb42e2e63a9206ba9d05d8f67800e986e07fea3b13dd05b07697d888852c845b5f6772c5d549de6d11eacbad7c6be686a05dd55c31cec4590fe4bcccb4b0ff26f4cd251862cf9e71e833431239cd9079e926333d92bcfa0ad6087800ecb76e3aeb8f907ca0dccd7a4147efaa6b71f5c59082967a43fb0580de3b25d72a3840a4bf4d98fcbf5b0f6e2d0b248b24226d45e1d30679834624d4713b0a93fdc073e22afa93cff5d21288697772e2cbb1224cc97a9014498ef483fd84f4919345be02031b87a9bcec4c41e9ac42106c3c8b25bc45fda474aa73169f9188786995a74eff97deb9cc35a781d104f95fc566131954660bee19209ae4180856582b75fcffa9d34bebf9539b78366db7caf135755d2ff7de2b943be462402ce16beb4314ecf0717bdfb991db83faef4ef4fd9bc7ea56cb3790933618a3b151e5b0f54a7608704c9825ab33578a52e8da2e686bc66217ee22c0d3669de3bc79091d86e0314d6a8fa7150322baed17a20c831465b41ee78d3947c3ca6537b92d1da964a43e0f584f2ff576ca78654360b193924f66074d043fce38970b177fec13b0aa9271278335c820ee6090e93ae07c1b2ac422dc869b8f7b8e4d71a9277bc1fc2959f90b9314271ef0e1ef7493aa688e75871be36d5ae431819d81f2f1abe8f9baaf922aee2ff1ec8211fe83331620b6ea2efb8575d089b8fa3287cd0994cf193f7d1eab49d48b5a7b0ee6f241165a461c6f0280407e386ff5363ca8e2f08d309c6f499d97f7ddb857da79d554071b3cb476929520d02a44319973fae86aea12d641b052f65935d61bd251ce76adc1ac3194906aa471aa3902d65b0cdaaa93355a98a839f957ed992326e15fb4b24bef29bc833a4123e100cd484885beaa987d3c6a788969361f1c98f545b48947e517a552e46da2de2e84c3b6a1f79e45d17a2bd15708ab7d5c862e6ee51d907f60d305cd7cb33c3a783afe0375ade3775d738be4f306e5b8eb5bc346f593b965da59997ec0b6426e7025dbbaa5f4df4f5d0fbfbc725b2b8413bc4cfd04f0cb22fef80a85180b6a608053f1bae392b78f6071a1a6de0e9cbde57e0308216d586b1cf1f39cf2a8451a6226bd96b1a030febd671988c917ed2e3c032d52864f02c9145443ffe59853f5b3c276fa44a6f392ef6a3353614b2f6d96ca715c658c4c43135b94c6c00a1746f63879fb622118620585d466ea9025d033772a89136181a0c8c91d901016d6136170ff2624ab2927e8817c5acb6d3e51bb2b3cb27f365117e38dcd36e91762fc3d8a26b515618c3c526d74f638fa9ce3b2826c0d98adbfe489349452a21e7ea272fbd1c1b4eaeb6d164939ecbbf34ad85f763245b0e0e32fec60b38384adf87a7fc74913334ab857c3330897da2addbc86269b2b678179dbf054dfaae2f2dcd6ff777cd2537476a942d7f8cf7b949dbe172973e096c8cad6502cba2711868a71d65defc91e93e0f94628ff50ff93d2cefdecf8a7b59dec44b692e88a41cd5bccf3b9565d6c7d91629ce46d2925183e216f3321f2f72de676dcc321fd43310d0b5434c7cc175017ef8566bc742181c21f4629839bae5bbe4419fbdeee512f5515578db5a081f045d904ed55661b4a5dc7952c17d164f746a11e18b6f34c5b72efaa03245e4a09ebdbdf69375f58586e863e57ec790094a68cb6fa8d9ee8666c2e6a0428c144afea55548530687805e8eba57b7727a997d8dc6c6c72805b29c0e826f4b7d99abaef8ffc5abd0a77ae6cec4bd02ddf933eaf0631a47f2da29f5ce579c6b1d494da96d5cb1c9625ef6335dcc8ff4d91d6c9b3ddbfe6e5a3644d9ca8710e5aea727a0efcc11e904a65fe48b5ac4e7d5e9377b4954e008f52f8fdda67c55812d58e84473d98dfc73998</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请在此处输入密码，提示词:深仔lord</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活、记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法学习之RNN</title>
      <link href="/2022/07/30/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8BRNN/"/>
      <url>/2022/07/30/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8BRNN/</url>
      
        <content type="html"><![CDATA[<p>这里我展示了RNN及相关变体的主要理论以及我自己理解的一些点，欢迎大家留言探讨。</p><p>先简单介绍一下我与RNN及其变体的一些渊源。我是2021年7月12号换的研究方向，之前一直在研究摩擦纳米发电，苦于没有实验条件，也没有师兄师姐请教，为了顺利毕业，只能换了方向。随后我跟着一位张师兄搞负荷预测，开始接触机器学习以及深度学习。因为负荷预测是一个时序回归问题，所以当时首选的就是在时序问题上有着较好性能的LSTM模型（RNN模型的一种变体，后续会详细介绍其理论），从这开始，我与机器学习以及深度学习的缘分算是开始了……</p><!-- more  --><h1 id="RNN（循环神经网络）"><a href="#RNN（循环神经网络）" class="headerlink" title="RNN（循环神经网络）"></a>RNN（循环神经网络）</h1><p>神经网络就好像一个黑匣子函数，它通过模型在训练集上的训练来确定内部神经元之间的权重，从而在输入和输出之间建立一条映射关系。通过添加激活函数等方法使得这一映射关系不再是传统的非线性映射关系。然而传统的人工神经网络只能拟合单个x和y之间映射关系，即输入多个x，它能按照训练好的模型拟合输出多个x相对应的y。这一功能很是强大，在理论上，传统的人工神经网络模型能够拟合数学上绝大多数函数。然而，在我们的现实生活中，始终有着一条时间线存在的。就是因为这一时间线的存在，让我们的输入X并不是单一独立的各个x1，x2….。在x1，x2之间还存在一定的时序关系（又或者说因果关系），即前一时刻的x1会对后一时刻的x2的输出y2有着一定的影响，简单来说x1也是x2的输出的影响因数之一。当考虑到这种情况，用传统的人工神经网络来处理这种时序问题就显得不那么合理了。当然，在人工神经网络中，我们可以手动地把x1添加到x2的自变量中，但是这一操作会引申出一个实际问题：当我们实际应用人工神经网络模型来处理时序问题时，我们应该添加多少个前一时刻的x值到当前x的模型输入中去呢？添加的数量多了会让真正影响当前x的自变量在所有自变量的权重降低，从而对模型精度会造成很大的影响；添加的量少了会让x的时序关系体现的不够充分，也会造成模型精度的下降。如何添加前一时刻的x值不仅将严重依赖研究人员的经验，也会因为所解决的问题不同显著增加研究人员的研究难度。因此，我们需要一个在模型原理上就已经考虑到时序关系的模型来解决具体的时序问题。这时，RNN（循环人工神经网络）就应运而生了。</p><h2 id="RNN理论"><a href="#RNN理论" class="headerlink" title="RNN理论"></a>RNN理论</h2><p>RNN由一个输入层，一个隐藏层和一个输出层组成，其原理图如图1所示：<img src="/2022/07/30/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8BRNN/RNN.jpg" alt="RNN" title="图1：RNN"></p><p>其中，<script type="math/tex">x_t</script>代表当前时刻的输入，<script type="math/tex">S_t</script>代表当前时刻隐藏层的值，<script type="math/tex">O_t</script>代表当前时刻的输出值。值得注意的是，<script type="math/tex">S_t</script>的值不仅取决于<script type="math/tex">x_t</script>，还与<script type="math/tex">S_{t-1}</script>有关。</p><script type="math/tex; mode=display">O_t=g(V \cdot S_t) \\S_t=f(U \cdot X_t+W \cdot S_{t-1})</script><p>式中，输出层是一个全连接层，<script type="math/tex">V</script>是输出层的权重矩阵，<script type="math/tex">g</script>是激活函数；循环层中，<script type="math/tex">U</script>是输入<script type="math/tex">x</script>权重矩阵，<script type="math/tex">W</script>是上一次<script type="math/tex">S_{t-1}</script>在<script type="math/tex">x</script>上的权重矩阵，<script type="math/tex">f</script>是激活函数。</p><h2 id="RNN带来的问题"><a href="#RNN带来的问题" class="headerlink" title="RNN带来的问题"></a>RNN带来的问题</h2><p>梯度爆炸：误差梯度在网络训练时被用来得到网络参数更新的方向和幅度，进而在正确的方向上以合适的幅度更新网络参数。在深层网络或递归神经网络中，误差梯度在更新中累积得到一个非常大的梯度，这样的梯度会大幅度更新网络参数，进而导致网络不稳定。在极端情况下，权重的值变得特别大，以至于结果会溢出（NaN值，<a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/nan/7455322%3Ffr%3Daladdin">无穷与非数值</a>）。当梯度爆炸发生时，网络层之间反复乘以大于1.0的梯度值使得梯度值成倍增长。</p><p>梯度消失：在神经网络中，当前面隐藏层的学习速率低于后面隐藏层的学习速率，即随着隐藏层数目的增加，分类准确率反而下降了。这种现象叫做消失的梯度问题。</p><h1 id="LSTM（长短时记忆神经网络）"><a href="#LSTM（长短时记忆神经网络）" class="headerlink" title="LSTM（长短时记忆神经网络）"></a>LSTM（长短时记忆神经网络）</h1>]]></content>
      
      
      <categories>
          
          <category> 算法学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习，RNN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法学习之决策树(一)：算法原理及实例</title>
      <link href="/2022/07/25/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/"/>
      <url>/2022/07/25/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%86%B3%E7%AD%96%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>为了加强自身有关机器学习理论基础，现重新梳理一下机器学习主流算法的理论知识以及其实践细节。现在分别整理如下：</p><ul><li>决策树</li><li>随机森林</li><li>Adaboost</li><li>GBDT</li><li>logistic回归</li><li>SVM</li><li>朴素贝叶斯</li><li>XGboost</li><li>lightgbm</li></ul><h1 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h1><p>决策树是一个有监督分类与回归算法。决策树的生成只考虑局部最优，相对的，决策树剪枝则考虑全局最优。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>决策树是一种基本的分类与回归方法，其模型就是用一棵树来表示我们的整个决策过程。这棵树可以是二叉树（比如CART 只能是二叉树），也可以是多叉树（比如 ID3、C4.5 可以是多叉树或二叉树）。根节点包含整个样本集，每个叶节都对应一个决策结果（注意，不同的叶节点可能对应同一个决策结果），每一个内部节点都对应一次决策过程或者说是一次属性测试。从根节点到每个叶节点的路径对应一个判定测试序列。<br>决策树的生成就是不断的选择最优的特征对训练集进行划分，是一个递归的过程。递归返回的条件有三种：</p><ol><li>当前节点包含的样本属于同一类别，无需划分；</li><li>当前属性集为空，或所有样本在属性集上取值相同，无法划分；</li><li>当前节点包含样本集合为空，无法划分。</li></ol><hr><h2 id="ID3、C4-5、CART基础公式"><a href="#ID3、C4-5、CART基础公式" class="headerlink" title="ID3、C4.5、CART基础公式"></a>ID3、C4.5、CART基础公式</h2><p>这是三个非常著名的决策树算法，简单来说：</p><ul><li>ID3 使用信息增益作为选择特征的准则；</li><li>C4.5 使用信息增益比作为选择特征的准则；</li><li>CART 使用 Gini 指数作为选择特征的准则。</li></ul><h3 id="熵-entropy"><a href="#熵-entropy" class="headerlink" title="熵(entropy)"></a>熵(entropy)</h3><p>表示随机变量不确定性的度量。<br>设X 是一个有限状态的离散型随机变量，其概率分布为:<br>$P(X=x_i)=p_i,\,\,i=1,2,\cdot,n$</p><p>则随机变量X熵定义为:</p><script type="math/tex; mode=display">H(X)=-\sum_{i=1}^np_i*log(p_i)</script><p>熵越大，则随机变量的不确定性越大。<br>熵表示的是数据中包含的信息量大小。熵越小，数据的纯度越高，也就是说数据越趋于一致，这是我们希望的划分之后每个子节点的样子。</p><h3 id="条件熵-conditional-entropy-："><a href="#条件熵-conditional-entropy-：" class="headerlink" title="条件熵(conditional entropy)："></a>条件熵(conditional entropy)：</h3><p>随机变量X给定的条件下，随机变量Y的条件熵H(Y|X)定义为：</p><script type="math/tex; mode=display">H(Y|X)=\sum_{i=1}^np_i*H(Y|X=x_i)</script><p>其中，<script type="math/tex">p_i=P(X=x_i)</script>。</p><h3 id="信息增益-information-gain-："><a href="#信息增益-information-gain-：" class="headerlink" title="信息增益(information gain)："></a>信息增益(information gain)：</h3><p>意义：引入属性A后，原来数据集D的不确定性减少了多少。<br>定义属性A对数据集D的信息增益为$g(D,A)$，它等于D本身的熵减去给定A的条件下D的条件熵，即：  </p><script type="math/tex; mode=display">g(D,A)=H(D)-H(D|A)</script><p>一般地，熵<script type="math/tex">H(Y)</script>与条件熵<script type="math/tex">H(Y|X)</script>之差称为互信息(mutual information)。<br>信息增益越大，则意味着使用属性a来进行划分所获得的 “纯度提升” 越大 。也就是说，用属性a来划分训练集，得到的结果中纯度比较高。</p><h3 id="基尼指数（Gini-index）"><a href="#基尼指数（Gini-index）" class="headerlink" title="基尼指数（Gini index）"></a>基尼指数（Gini index）</h3><p>假设数据集D中有K个类，样本属于第K类的概率为pk，基尼指数Gini(D)表示集合D的不确定性(纯度)，公式如下：</p><script type="math/tex; mode=display">Gini（D）=\sum_{i=1}^Np_k*(1-p_k)=1-\sum_{i=1}^Np_k^2</script><p>从上面的公式可以发现，当数据集D中只有1个类时，pk=1，Gini(D)=0，说明基尼指数越小，样本纯度越高。<br>对于特征A，将集合D划分成D1和D2，基尼指数Gini(D,A)表示经过A=a划分后集合D的不确定性，公式如下：</p><script type="math/tex; mode=display">Gini(D,A)= {|D_1|\over|D|}*Gini(D_1)+{|D_2|\over|D|}*Gini(D_2)</script><p>其中|D|、|D1|、|D2|分别表示数据集D、D1、D2中样本数量。</p><h3 id="误差平方和"><a href="#误差平方和" class="headerlink" title="误差平方和"></a>误差平方和</h3><p>在预测模型时希望真实值和预测值越接近越好，说明预测误差小。若yi表示训练集D={(x1,y1),(x2,y2),…,(xn,yn)}的输出变量，是连续值。f(xi)是预测值，则预测误差可以表示为：</p><script type="math/tex; mode=display">err=\sum[y_i-f(x_i)]^2</script><p>我们拟合的目标就是寻找最佳划分特征里的最佳划分点，找到每一个f(xi)，使得误差平方和最小化。<br>计算各个特征各个值划分的两部分 和D1和D2 的误差平方和，选择误差平方和最小的（如下式）作为最优特征和最优切分点</p><script type="math/tex; mode=display">\min_j,s[min_{c1}\sum_{x_i\epsilon R_1(j,s)}(y_i-c1)^2+min_{c2}\sum_{x_i\epsilon R_2(j,s)}(y_i-c2)^2]</script><p>上面的j是不同的特征，s是对应每个特征可供选择的划分点，因为一个连续特征的值很多，所以划分点很多，要选择最优的。<br>中括号内的意思就是找出针对特征j的最优划分点s，采用均方误差，最外层是特征，计算不同特征。回归的比分类相对麻烦一些，分类只需要计算每个特征的信息增益，回归是计算每个特征的均方误差增益，但是它多了一个步骤就是求每个特征增益的时候还要找出最优划分值s。</p><hr><h2 id="ID3"><a href="#ID3" class="headerlink" title="ID3"></a>ID3</h2><p>ID3 使用信息增益作为选择特征的准则，<strong>信息增益 = 划分前熵 - 划分后熵</strong>。信息增益越大，则意味着使用属性a来进行划分所获得的 “纯度提升” 越大 。也就是说，用属性a来划分训练集，得到的结果中纯度比较高</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>从根节点开始，计算所有可能的特征的信息增益，选择信息增益最大的特征作为节点的划分特征；</li><li>由该特征的不同取值建立子节点；</li><li>再对子节点递归1-2步，构建决策树；</li><li>直到没有特征可以选择或类别完全相同为止，得到最终的决策树。</li></ol><h3 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h3><p>优点：计算复杂度不高，输出结果易于理解，对中间值的缺失不敏感，可以处理不相关特征数据；缺点：</p><ul><li>只能处理分类属性的数据，不能处理连续的数据；</li><li>没有剪枝，可能会产生过度匹配问题，需要进行剪枝</li><li>采用信息增益作为选择最优划分特征的标准，然而信息增益会偏向那些取值较多的特征</li></ul><hr><h2 id="C4-5"><a href="#C4-5" class="headerlink" title="C4.5"></a>C4.5</h2><p>C4.5 克服了 ID3 仅仅能够处理离散属性的问题，以及信息增益偏向选择取值较多特征的问题，使用信息增益比来选择特征。<strong>信息增益比 = 信息增益 / 划分前熵</strong>。选择信息增益比最大的作为最优特征。公式：</p><script type="math/tex; mode=display">gR(D,A)={g(D,A)\over H_A(D)}</script><p>其中  <script type="math/tex">H_A(D)=-\sum_{i=1}^n{|D_i|\over|D|}*log2({|D_i|\over|D|})</script>， n 是特征 A 取值的个数<br>C4.5 处理连续特征是先将特征取值排序，以连续两个值中间值作为划分标准。尝试每一种划分，并计算修正后的信息增益，选择信息增益最大的分裂点作为该属性的分裂点。</p><h3 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h3><p>优点：<br>（1）通过信息增益率选择分裂属性，克服了ID3算法中通过信息增益倾向于选择拥有多个属性值的属性作为分裂属性的不足；<br>（2）能够处理离散型和连续型的属性类型，即将连续型的属性进行离散化处理；<br>（3）构造决策树之后进行剪枝操作；<br>（4）能够处理具有缺失属性值的训练数据。<br>缺点：<br>（1）算法的计算效率较低，特别是针对含有连续属性值的训练样本时表现的尤为突出。<br>（2）算法在选择分裂属性时没有考虑到条件属性间的相关性，只计算数据集中每一个条件属性与决策属性之间的期望信息，有可能影响到属性选择的正确性。</p><h2 id="CART（分类回归树）"><a href="#CART（分类回归树）" class="headerlink" title="CART（分类回归树）"></a>CART（分类回归树）</h2><h3 id="决策树的思想"><a href="#决策树的思想" class="headerlink" title="决策树的思想"></a>决策树的思想</h3><p>决策树认为，物以类聚、人以群分，在特征空间里相近的样本，那就是一类。如果为每个“类”分配的空间范围比较小，那么，同一个类内的样本差异会非常小，以至于看起来一样。换句话说，如果我们可以将特征空间切分为较小的碎块，然后为每一个碎块内的样本配置一个统一的因变量取值，就有机会做出误差较小的预测。这也是分类和聚类算法的基本假设。<br>它的做法比较粗暴：首先分割特征空间，也就是将样本分组；然后为每一组样本分配一个预测值；最后，在预测阶段，为样本找到分组、找到预测值。<br>这种思想似乎有点道理，值得一试。当然有2个问题需要回答：（1）如何切分特征空间；（2）如何为各个空间碎块设置因变量取值。</p><h3 id="针对离散数据的分类决策树"><a href="#针对离散数据的分类决策树" class="headerlink" title="针对离散数据的分类决策树"></a>针对离散数据的分类决策树</h3><p>假设预测任务的输入和输出都是离散值，我们可以直接以特征的各个取值为候选分割平面（换个说法，就是对训练样本分组），进行决策树的构建——这就是针对离散值的分类决策树。<br>注意，针对离散值的决策树在对训练样本进行分组时，一般情况下不允许重复使用一个特征。而有能力处理连续变量的CART回归树不同，允许重复使用一个特征。</p><h3 id="CART回归树的逻辑结构"><a href="#CART回归树的逻辑结构" class="headerlink" title="CART回归树的逻辑结构"></a>CART回归树的逻辑结构</h3><p>当然，一些情况下，部门不能直接使用特征取值，比如说，特征为连续变量。这时候，我们需要使用一种新的策略，来选择用于分割样本的特征取值。<br>另一种情况下，我们不能使用信息增益、基尼系数这样的指标，作为分组质量的表征——输出值是连续变量。这时候，我们也需要一种新的策略，来评估分组质量。<br>当任务的输出值为连续变量，我们需要使用决策树的另一种版本——回归树。最常见的回归树就是CART回归树。</p><h2 id="实例演示计算"><a href="#实例演示计算" class="headerlink" title="实例演示计算"></a>实例演示计算</h2><div class="table-container"><table><thead><tr><th></th><th>天气</th><th>温度</th><th>湿度</th><th>风速</th><th>活动</th></tr></thead><tbody><tr><td>1</td><td>晴</td><td>炎热</td><td>高</td><td>弱</td><td>取消</td></tr><tr><td>2</td><td>晴</td><td>炎热</td><td>高</td><td>强</td><td>取消</td></tr><tr><td>3</td><td>阴</td><td>炎热</td><td>高</td><td>弱</td><td>进行</td></tr><tr><td>4</td><td>雨</td><td>适中</td><td>高</td><td>弱</td><td>进行</td></tr><tr><td>5</td><td>雨</td><td>寒冷</td><td>正常</td><td>弱</td><td>进行</td></tr><tr><td>6</td><td>雨</td><td>寒冷</td><td>正常</td><td>强</td><td>取消</td></tr><tr><td>7</td><td>阴</td><td>寒冷</td><td>正常</td><td>强</td><td>进行</td></tr><tr><td>8</td><td>晴</td><td>适中</td><td>高</td><td>弱</td><td>取消</td></tr><tr><td>9</td><td>晴</td><td>寒冷</td><td>正常</td><td>弱</td><td>进行</td></tr><tr><td>10</td><td>雨</td><td>适中</td><td>正常</td><td>弱</td><td>进行</td></tr><tr><td>11</td><td>晴</td><td>适中</td><td>正常</td><td>强</td><td>进行</td></tr><tr><td>12</td><td>阴</td><td>适中</td><td>高</td><td>强</td><td>进行</td></tr><tr><td>13</td><td>阴</td><td>炎热</td><td>正常</td><td>弱</td><td>进行</td></tr><tr><td>14</td><td>雨</td><td>适中</td><td>高</td><td>强</td><td>取消</td></tr></tbody></table></div><p>数据集中有四个属性（天气、温度、湿度、风速），类标签有两个（进行和取消）。<br>plus：我们只关注最后的结果是进行还是取消，所以我们在任何分类属性下都只关注类标签的概率，这一点很重要，不然后面都不知道为什么这么计算。</p><h3 id="1-计算类别信息熵"><a href="#1-计算类别信息熵" class="headerlink" title="1. 计算类别信息熵"></a>1. 计算类别信息熵</h3><p>类别信息熵表示的是所有样本中各种类别出现的不确定性之和。根据熵的概念，熵越大，不确定性就越大，把事情搞清楚所需要的信息量就越多。</p><p>按照上文中的公式，我们可以计算在同一属性下的类别信息熵（plus：可能说的不对，但是大概意思是计算在这个属性分类下的类别信息熵，这里突出的是计算同一属性或分类下，其他分类下的类别信息熵则不用管。当没有分类的时候则计算整个数据集下的类别信息熵，计算过程如下）。</p><script type="math/tex; mode=display">H(D)=-9/14*log2(9/14)-5/14*1og2(5/14)=0.940</script><p>其中，9/14是整个数据集下的类标签“进行”的概率，5/14是整个数据集下的类标签“取消”的概率</p><h3 id="2-计算每个属性的信息熵"><a href="#2-计算每个属性的信息熵" class="headerlink" title="2. 计算每个属性的信息熵"></a>2. 计算每个属性的信息熵</h3><p>每个属性的信息熵相当于一种条件熵。他表示的是在某种属性的条件下，各种类别出现的不确定性之和。属性的信息熵越大，表示这个属性中拥有的样本类别越不“纯”。<br>每个属性就相当于按照一定的规则进行了一次分类，在例子中，我们分别对数据集中的四个属性进行初步分类就可以得出每个属性的信息熵。</p><script type="math/tex; mode=display">H(天气)=5/14*[-2/5*log2(2/5)-3/5*log2(3/5)]+4/14*[-4/4*log2(4/4)]+5/14*[-3/5*log2(3/5)-2/5*log2(2/5)]=0.694</script><p>其中，天气的信息熵为晴天的概率（5/14）乘以晴天条件下类别信息熵<script type="math/tex">[-2/5*log2(2/5)-3/5*log2(3/5)]</script>加上阴天的概率（4/14）乘以阴天条件下的类别信息熵<script type="math/tex">[-4/4*log2(4/4)]</script>加上雨天的概率（5/14）乘以雨天条件下的类别信息熵<script type="math/tex">[-3/5*log2(3/5)-2/5*log2(2/5)]</script>。同理：</p><script type="math/tex; mode=display">H(温度)=0.911\\H（湿度）=0.789\\H（风速）=0.892</script><h3 id="3-计算信息增益-ID3"><a href="#3-计算信息增益-ID3" class="headerlink" title="3. 计算信息增益 (ID3)"></a>3. 计算信息增益 (ID3)</h3><p>信息增益的 = 熵 - 条件熵，在这里就是类别信息熵 - 属性信息熵，它表示的是信息不确定性减少的程度。如果一个属性的信息增益越大，就表示用这个属性进行样本划分可以更好的减少划分后样本的不确定性，当然，选择该属性就可以更快更好地完成我们的分类目标。<br>信息增益就是ID3算法的特征选择指标。</p><script type="math/tex; mode=display">g(D,天气)=H（D）-H（天气）=0.246\\g(D,温度)=H（D）-H（温度）=0.029\\g(D,湿度)=H（D）-H（湿度）=0.15\\g(D,风速)=H（D）-H（风速）=0.048</script><p>这里选择最大的信息增益作为根节点，然后再确定这个根节点下再重复过程1~3，确定接下来的各个子跟节点，直到没有特征可以选择或类别完全相同为止，得到最终的决策树。</p><h3 id="4-计算属性分裂信息度量"><a href="#4-计算属性分裂信息度量" class="headerlink" title="4. 计算属性分裂信息度量"></a>4. 计算属性分裂信息度量</h3><p>用分裂信息度量来考虑某种属性进行分裂时分支的数量信息和尺寸信息，我们把这些信息称为属性的内在信息（instrisic information）。信息增益率用<strong>信息增益 / 内在信息</strong>，会导致属性的重要性随着内在信息的增大而减小（也就是说，如果这个属性本身不确定性就很大，那我就越不倾向于选取它），这样算是对单纯用信息增益有所补偿。</p><script type="math/tex; mode=display">H_A（天气）=-5/14*log2（5/14）-4/14*log2（4/14）-5/14*log（5/15）=1.577\\H_A（温度）=1.556\\H_A（湿度）=1.0\\H_A（风速）=0.985</script><h3 id="5-计算信息增益率（C4-5"><a href="#5-计算信息增益率（C4-5" class="headerlink" title="5. 计算信息增益率（C4.5)"></a>5. 计算信息增益率（C4.5)</h3><script type="math/tex; mode=display">gR（天气）=g(D,天气)/H_A（天气）=0.155\\gR（温度）=g(D,温度)/H_A（温度）=0.0186\\gR（湿度）=g(D,湿度)/H_A（湿度）=0.151\\gR（风速）=g(D,风速)/H_A（风速）=0.048\\</script><p>天气的信息增益率最高，选择天气为分裂属性。发现分裂了之后，天气是“阴”的条件下，类别是”纯“的，所以把它定义为叶子节点，选择不“纯”的结点继续分裂。在子结点当中重复过程1~5。</p><h3 id="6-计算基尼指数-（CART分类）"><a href="#6-计算基尼指数-（CART分类）" class="headerlink" title="6. 计算基尼指数 （CART分类）"></a>6. 计算基尼指数 （CART分类）</h3><p>计算各特征的基尼质数，选择最优特征以及最优切分点。<br>以求特征属性天气的基尼质数为例，其中|D|表示整个数据集中样本个数14，$|D_1|$表示天气为晴的样本个数，$|D_2|$表示天气不为晴的样本个数。</p><script type="math/tex; mode=display">Gini(D,天气=晴)={5\over14}*[2*{2\over5}*{3\over5}]+{9\over14}*[2*{7\over9}*{2\over9}]=0.394</script><p>其中${5\over14}$为晴天的概率，$[2<em>{2\over5}</em>{3\over5}] $为晴天条件下的基尼指数，$[2<em>{7\over9}</em>{2\over9}]$为不是晴天条件下的基尼指数。同理：</p><script type="math/tex; mode=display">Gini(D,天气=阴)={4\over14}*[2*{4\over4}*{0\over4}]+{10\over14}*[2*{5\over10}*{5\over10}]=0.357\\Gini(D,天气=雨)={5\over14}*[2*{2\over5}*{3\over5}]+{9\over14}*[2*{6\over9}*{3\over9}]=0.457\\Gini(D,温度=炎热)={4\over14}*[2*{2\over4}*{2\over4}]+{10\over14}*[2*{7\over10}*{3\over10}]=0.443\\Gini(D,温度=适中)={6\over14}*[2*{2\over6}*{4\over6}]+{8\over14}*[2*{5\over8}*{3\over8}]=0.472\\Gini(D,温度=寒冷)={4\over14}*[2*{1\over4}*{3\over4}]+{10\over14}*[2*{6\over10}*{4\over10}]=0.45\\Gini(D,湿度=高)={7\over14}*[2*{4\over7}*{3\over7}]+{7\over14}*[2*{6\over7}*{1\over7}]=0.367\\Gini(D,湿度=正常)={7\over14}*[2*{4\over7}*{3\over7}]+{7\over14}*[2*{6\over7}*{1\over7}]=0.367\\Gini(D,风速=弱)={8\over14}*[2*{6\over8}*{2\over8}]+{6\over14}*[2*{3\over6}*{3\over6}]=0.429\\Gini(D,风速=弱)={8\over14}*[2*{6\over8}*{2\over8}]+{6\over14}*[2*{3\over6}*{3\over6}]=0.429</script><p>由上面计算可知：Gini(D,天气=阴)=0.357最小，则选择阴天为最优特征，是否为阴天为最优切分点，依次计算划分值，重复此过程可生成最后的决策树。</p><h3 id="7-计算残差平方和（CART回归）"><a href="#7-计算残差平方和（CART回归）" class="headerlink" title="7.计算残差平方和（CART回归）"></a>7.计算残差平方和（CART回归）</h3><p>算法流程：</p><ol><li>选择最优切分特征j和切分点s<script type="math/tex; mode=display">\min_j,s[min_{c1}\sum_{x_i\epsilon R_1(j,s)}(y_i-c1)^2+min_{c2}\sum_{x_i\epsilon R_2(j,s)}(y_i-c2)^2]</script></li><li>用选定的对（j，s）划分区域并决定相应的输出值：<script type="math/tex; mode=display">R_1(j,s)={x|x^{(j)}<=s}   R_2(j,s)={x|x^{(j)}>s} c_m={1\over N_m}\sum_{x_i\epsilon R_m(j,s)}y_i\,\,\, x\epsilon R_m,m=1,2</script>第一个式子是将数据按照切分点分成两个节点，第二个是求每个节点的均方误差之和。</li><li>继续对两个子区域调用步骤1，2直至满足停止条件</li><li>将输入空间划分为M个区域， <script type="math/tex">R_1 , R_2 , . . . R_M</script> 生成决策树：<script type="math/tex; mode=display">f(x)=\sum_{i=1}^Mc_mI (x\epsilon R_m)</script>该式子的意思是求分到相同节点的均值作为预测值，后面的指示函数作为划分到那么区域。</li></ol><div class="table-container"><table><thead><tr><th>x</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th></tr></thead><tbody><tr><td>y</td><td>5.56</td><td>5.7</td><td>5.91</td><td>6.4</td><td>6.8</td><td>7.05</td><td>8.9</td><td>8.7</td><td>9</td><td>9.05</td></tr></tbody></table></div><p>该式子的意思是求分到相同节点的均值作为预测值，后面的指示函数作为划分到那么区域。<br>特征x包含了10个元素，且已排好序了，直接以(xi+xi+1)/2，i∈{1,2,…,10}为切分点s，容易求得:</p><script type="math/tex; mode=display">R_1{x|x^<=s}\,\,\, R_2={x|x>s}</script><p>则C1、C2为：</p><script type="math/tex; mode=display">c_1={1\over N_1}\sum_{x_i\epsilon R_1}y_i\,\,\,c_2={1\over N_2}\sum_{x_i\epsilon R_2}y_i</script><p>其中N1、N2分别是R1、R2中的样本点数，C1、C2为R1、R2中的因变量均值。<br>针对x考虑如下切分点：1.5、2.5、3.5、4.5、5.5、6.5、7.5、8.5、9.5，可以求出相应的R1、R2、C1、C2，以及 <script type="math/tex">\min_j,s[min_{c1}\sum_{x_i\epsilon R_1(j,s)}(y_i-c1)^2+min_{c2}\sum_{x_i\epsilon R_2(j,s)}(y_i-c2)^2]</script><br>例如，当s=1.5时，R1={1}，R2={2,3,…,10}，C1=5.56，C2=7.5，则</p><script type="math/tex; mode=display">m(s)=\min_j,s[min_{c1}\sum_{x_i\epsilon R_1(j,s)}(y_i-c1)^2+min_{c2}\sum_{x_i\epsilon R_2(j,s)}(y_i-c2)^2]=0+15.72=15.72</script><p>同理可得其它划分点的最小误差如下：</p><div class="table-container"><table><thead><tr><th style="text-align:center">s</th><th style="text-align:center">1.5</th><th style="text-align:center">2.5</th><th style="text-align:center">3.5</th><th style="text-align:center">4.5</th><th style="text-align:center">5.5</th><th style="text-align:center">6.5</th><th style="text-align:center">7.5</th><th style="text-align:center">8.5</th><th style="text-align:center">9.5</th></tr></thead><tbody><tr><td style="text-align:center">m(s)</td><td style="text-align:center">15.72</td><td style="text-align:center">12.07</td><td style="text-align:center">8.36</td><td style="text-align:center">5.78</td><td style="text-align:center">3.91</td><td style="text-align:center">1.93</td><td style="text-align:center">8.01</td><td style="text-align:center">11.73</td><td style="text-align:center">15.74</td></tr></tbody></table></div><p>由上表知，当x=6.5时m(s)达到最小值，即此时误差平方和最小。此时R1={1,2,…,6}，R2={7,8,…,10}，C1=6.24、C2=8.9，所以回归树T1(x)为:</p><script type="math/tex; mode=display">f_1(x)=T_1(x)= \begin{cases}6.24.x<6.5\\8.91,x>6.5\end{cases}</script><p>用f1(x)拟合训练数据的残差见下表，表中r2i= yi- f1(xi) (i=1,2,…1,10)。</p><div class="table-container"><table><thead><tr><th>x</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th></tr></thead><tbody><tr><td>r2i</td><td>-0.68</td><td>-0.54</td><td>-0.33</td><td>0.16</td><td>0.56</td><td>0.81</td><td>-0.01</td><td>-0.21</td><td>0.09</td><td>0.14</td></tr></tbody></table></div><p>第2步求T2(x)方法与求T1(x)，只是拟合的数据是上表的残差，可以得到</p><script type="math/tex; mode=display">T_2(x)= \begin{cases}-0.52,x<3.5\\0.22,x>=6.5\end{cases}\\f_2(x)=f_1(x)+T_2(x)= \begin{cases}5.72,x<3.5\\6.46,3.5<=x<6.5\\ 9.13,x>=6.5\end{cases}</script><p>可以根据此方法继续求解，直至拟合训练数据的误差平方和小于某个阈值时作为结束条件，那么f(x)=fi(x)即为所求回归树。</p>]]></content>
      
      
      <categories>
          
          <category> 算法学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习，决策树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python复习日记</title>
      <link href="/2022/07/23/python%E5%A4%8D%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
      <url>/2022/07/23/python%E5%A4%8D%E4%B9%A0%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="算法学习日记python篇-—day-1-2022-7-23"><a href="#算法学习日记python篇-—day-1-2022-7-23" class="headerlink" title="算法学习日记python篇   —day 1 2022-7-23"></a>算法学习日记python篇   —day 1 2022-7-23</h1><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h3 id="声明：这是一个复习blog，记录复习过程中的各种题库。资料由于是在网上收集的，所以可能出现各种大范围雷同。如果侵犯您的版权，请评论留言，我会第一时间做出相应调整。在此，特别鸣谢：Java架构师必看的进大厂必须掌握的面试题-100个python面试"><a href="#声明：这是一个复习blog，记录复习过程中的各种题库。资料由于是在网上收集的，所以可能出现各种大范围雷同。如果侵犯您的版权，请评论留言，我会第一时间做出相应调整。在此，特别鸣谢：Java架构师必看的进大厂必须掌握的面试题-100个python面试" class="headerlink" title="声明：这是一个复习blog，记录复习过程中的各种题库。资料由于是在网上收集的，所以可能出现各种大范围雷同。如果侵犯您的版权，请评论留言，我会第一时间做出相应调整。在此，特别鸣谢：Java架构师必看的进大厂必须掌握的面试题-100个python面试"></a>声明：这是一个复习blog，记录复习过程中的各种题库。资料由于是在网上收集的，所以可能出现各种大范围雷同。如果侵犯您的版权，请评论留言，我会第一时间做出相应调整。在此，特别鸣谢：Java架构师必看的<a href="https://zhuanlan.zhihu.com/p/270331009">进大厂必须掌握的面试题-100个python面试</a></h3><ul><li><a href="#基本面试问题">基本面试问题</a></li><li><a href="#OOPS面试问题">OOPS面试问题</a></li><li><a href="#基本的python程序">基本的python程序</a></li><li><a href="#python库">python库</a></li></ul><h2 id="基本面试问题"><a href="#基本面试问题" class="headerlink" title="基本面试问题"></a>基本面试问题</h2><ol><li><p>python中的列表和元组有什么区别？、</p><ul><li><p>列表中的元素可以修改，元组中的元素不可修改，除非整个元组替换掉！</p></li><li><p>元组比列表更加轻量级，性能速度优于列表</p></li><li><p>元组可以在映射中当“键”使用，列表不能</p></li></ul></li><li><p>python主要功能是什么？</p><ul><li>python是一种解释型语言，与c语言不同，不需要编译</li><li>python是动态类型的，不需要声明变量的类型</li><li>python适合面向对象编程，因为它允许定义类以及组成和继承。python没有访问说明（如C++的public，private）（访问说明就是设置一个访问权限，不同人有着不同的权限）</li><li>编写代码速度快，但运行时比编译语言要慢，但python允许C的扩展，可以很大部分消除瓶颈</li><li>python有很多库，可以快速实现某项功能和解决某个问题</li></ul></li><li><p>python是一种什么类型的语言？编程还是脚本？</p><p>python能够编写脚本，但一般认为他是通用编程语言</p></li><li><p>python是一种解释语言吗？</p><p>python是一种解释型语言。（解释型语言是指运行之前不需要编译，在运行时执行一句翻译一句为机器语言）</p></li><li><p>什么是pep 8？</p><p>PEP代表python增强建议书（PEP8：python编程规范）。这是一组规则，用于指定如何格式化python代码以实现最大的可读性。</p></li><li><p>如何在python中管理内存？</p><p>Python引用了一个内存池(memory pool)机制，即Pymalloc机制(malloc:n.分配内存)，用于管理对小块内存的申请和释放。</p><p>主要有三种机制：</p><ul><li>引用计数机制。python内部使用引用计数，来保持追踪内存中的对象，python内部记录了对象有多少个引用，即引用计数，当对象被创建时就创建了一个引用计数，当对象不再需要时，这个对象的引用计数为0时，它被垃圾回收。</li><li>垃圾回收机制。当内存中有不再使用的部分时（引用数为0），垃圾收集器就会把他们清理掉。它会去检查那些引用计数为0的对象，然后清除其在内存的空间；循环垃圾回收器（a引用b，b引用a，这种相互引用也会被清除）。</li><li>内存池机制。内存池的概念就是预先在内存中申请一定数量的，大小相等的内存块留作备用，当有新的内存需求时，就先从内存池中分配内存给这个需求，不够了之后再申请新的内存。这样做最显著的优势就是能够减少内存碎片，提升效率。python引入内存池机制用于管理小块内存的申请和释放；同时，python将释放的内存返回给内存池，而不是操作系统；对于python对象（整数，浮点数和list等）有着独有的私有内存池，不同对象的内存池不共享。</li></ul></li><li><p>python的命名空间是什么？</p><p>命名空间是用于确保名称唯一以确保命名冲突的命名系统</p></li><li><p>什么是pythonpath？<br>这是一个环境变量，在导入模块时使用。当导入模块的时候，都会查找pythonpath以检查各个目录中是否存在导入的模块，解释器使用它来确定要加载哪个模块。</p></li><li><p>什么是python模块？命名python中一些常用的内置模块？<br>python模块是包含python代码的文件。该代码可以是函数类或者变量。python模块是包含可执行代码的.py文件<br>一些常用的内置模块是：</p><ul><li>操作系统-OS</li><li>系统-sys</li><li>数学-math</li><li>随机-random</li><li>资料时间-data time</li><li>JSON格式</li></ul></li><li><p>python中的局部变量和全局变量是什么？<br>全局变量：在函数外部或全局空间声明的变量，可被程序中的任何函数访问<br>局部变量：在函数内部声明的变量，只能在函数局部空间内被访问</p></li><li><p>python是否区分大小写？<br>是的，区分。</p></li><li><p>什么是python中的类型转换？<br>类型转换是将一种数据转换为另一种数据类型。</p><ul><li>int（） 转换为整数类型</li><li>float（） 转换为浮点数</li><li>ord（） 将字符转换为整数</li><li>hex（） 整数转换为十六进制</li><li>oct（） 整数转换为八进制</li><li>tuple（） 转换为元组</li><li>set（） 转换为集合后返回类型</li><li>list（） 转换为列表</li><li>dict（）此函数用于将顺序（键，值）的元组转换为字典</li><li>str（） 转换为字符串</li></ul></li><li><p>如何在windows上安装python并设置路径变量？<br>从<a href="www.python.org">官网</a>上下载安装包，并按照提示符安装。<br>将安装路径添加到环境变量中（如点击计算机-&gt;属性-&gt;高级-&gt;环境变量-&gt;修改系统变量 path）</p></li><li><p>python是否需要缩进？<br>需要的，一般使用tab键缩进（四个空格）</p></li><li><p>python数组和列表有什么区别？<br>数组中的数据类型必须相同，列表则可以有多个数据类型元素。</p></li><li><p>python中的函数是什么？<br>是通过def语句定义的代码块，包含函数名，参数列表和函数体。</p></li><li><p>什么是init？<br>init是Python中的方法或构造函数。创建类的新对象/实例时，将自动调用此方法以分配内存。所有类都具有init方法。</p></li><li><p>什么是lambda函数？<br>匿名函数被称为lambda函数，此函数可以有任何数量的参数，但只能有一个语句</p></li><li><p>python中的self是什么？<br>self是类的实例或对象。在python中，这包括为第一个参数。init方法中的self变量引用新创建的对象，而其他方法中的self变量引用其方法被调用的对象。</p></li><li><p>什么是break、continue和pass？</p><ul><li>break：跳出当前循环</li><li>continue： 跳出本次循环，后面语句不再执行</li><li>pass：主要用于占位</li></ul></li><li><p>[::-1]是做什么的？<br>用于逆序输出，原始数组或者列表保持不变。</p></li><li><p>如何在python中将列表项随机化？<br>利用random库中的相关函数实现相关功能。</p></li><li><p>什么是python迭代器？<br>迭代器是可以遍历或迭代的对象。</p></li><li><p>如何在python中生成随机数？<br>调用random库中的相关函数。如：</p><p>random.random()  返回[0,1)范围内的随机浮点数。</p></li><li><p>range()和xrange()有什么区别吗？<br>功能基本一致，但xrange（）对内存使用更加友好一点</p></li><li><p>如何在python中写注释？<br>使用#注释，有时候也可以用三引号引起来的字符串进行注释。</p></li><li><p>什么是**pickling和unpickling**？<br>pickle模块接受任何python对象并将其转换为字符串表示形式，并使用转储函数将其转储到文件中，此过程称之为pickling，从存储的字符串表示形式检索原始python对象的过程称为unpickling。</p></li><li><p>python中的生成器什么？<br>返回可迭代项目集的函数称为生成器。</p></li><li><p>如何大写字符串的第一个字母？<br>capitalize（）函数将字符串的首字母大写。</p></li><li><p>如何将字符串全部小写？<br>lower（）函数</p></li><li><p>如何在python中注释多行？<br>每行都要以#开头，不过jupyter 或pycharm有快捷键ctrl+/</p></li><li><p>python中的文档字符串是什么？<br>文档字符串用三引号引起来，没有被分配任何变量，有注释作用。</p></li><li><p>操作符和操作符的目的是什么？<br>可分为运算符和分隔符。运算符是特殊功能。它们采用一个或多个值并产生相应的结果。</p></li><li><p>python中的help（）和dir（）函数的用法是什么？<br>Help（）和dir（）这两个函数都可以从Python解释器访问，并用于查看内置函数的合并转储。Help（）函数：help（）函数用于显示文档字符串，还可以帮助您查看与模块，关键字，属性等有关的帮助；Dir（）函数：dir（）函数用于显示定义的符号。</p></li><li><p>当python退出时，为什么不取消分配所有内存？<br>那些具有对象循环引用或者全局命名空间引用的变量，在 Python 退出是往往不会被释放的，另外不会释放 C 库保留的部分内容。</p></li><li><p>python中的字典是什么？<br>python中的内置数据类型称为字典，它定义了键和值之间的一对一关系。字典包含一对键及其对应的值。字典由键索引。</p></li><li><p>如何在python中使用三元运算符？（这个我目前还不懂是啥）<br>三元运算符是用于显示条件语句的运算符。它由true或false值以及必须对其评估的语句组成。</p></li><li><p>*args,*kwargs是什么？有什么作用？<br>当我们不确定向函数传递多少参数时，或者将存储的参数列表或元组传递给函数时，可以使用*arges,* kwargs在我们不知道将多少个关键字参数传递给一个函数时使用，或者可用于将字典的值作为关键字参数传递</p></li><li><p>len()是做什么的？<br>确定字符串、列表、数组的长度</p></li><li><p>解释python中”re”模块的split（），sub（）、subn（）方法<br>为了修改字符串，Python的“ re”模块提供了3种方法：</p><ul><li>split（）–使用正则表达式模式将给定的字符串“拆分”为列表</li><li>sub（）–查找所有与正则表达式模式匹配的子字符串，然后将其替换为其他字符串</li><li>subn（）–它类似于sub（），并且还返回新字符串以及no更换</li></ul></li><li><p>什么是负索引，为什么要使用他们？<br>当遍历所索引序列时，可以从序列由前到后遍历，此时索引数为正，也是就正索引，同理当有后向前遍历序列时，索引数为负数，就是负索引，何时使用正索引还是负索引完全看具体情况哪种索引方便，一个从前往后数，一个从后往前数，方向不一致而已。</p></li><li><p>什么是python包？<br>python软件包是包含多个模块的名称空间</p></li><li><p>如何用python删除文件？<br>导入OS模块，使用<code>os.remove</code>即可</p></li><li><p>python的内置类型是什么？<br>python的内置类型如下：</p><ul><li>Integers</li><li>Floating-point</li><li>Complex numbers</li><li>Strings</li><li>Boolean</li><li>Built-in functions</li></ul></li><li><p>与python列表相比，numpy数组有什么优势？<br>相比来说，numpy不仅效率更高，而且更加方便。可以支持“向量化”操作，可以快速简单地实现矩阵和矢量运算；而且速度还更快，功能更加丰富。</p></li><li><p>如何将值添加到python数组组？<br>可以使用相关函数将元素添加到数组里面。如：append（），extend（），insert（i，x）。</p></li><li><p>如何删除值到python数组？<br>可以使用相关函数实现该功能。pop（）：返回删除值；remove（）：不返回删除值。</p></li><li><p>python是否具有OOps概念？<br>Python是一种面向对象的编程语言。这意味着可以通过创建对象模型在python中解决任何程序。但是，Python既可以当作过程语言，也可以当作结构语言。</p></li><li><p>深层复制和浅层复制有什么区别？<br>浅层复制：实现对象间数据元素的一一对应复制；深层复制：当被复制的对象数据成员是指针类型时，不是复制该指针成员本身，而是将指针所指对象进行复制。在python中，浅层复制会随原对象变化而变化，深层复制则不会。</p></li><li><p>如何在python中实现多线程？<br>可以通过导入threading模块来实现。（但我没试过，不知道效果咋样）</p></li><li><p>在python中编译和链接的过程是什么？<br>编译：python中的源代码保存为.py文件，然后将其编译为称为字节码的格式，然后将字节码转换为机器码。编译后，代码存储在.pyc文件中，并在更新源代码时重新生成。此过程称为编译；<br>链接：链接是最后一个阶段，其中所有功能都与它们的定义链接在一起，因为链接器知道在哪里实现所有这些功能。此过程称为链接。<br>在python中编译和链接允许正确编译新扩展而不会出现任何错误，并且只有在通过编译过程时才能进行链接。如果使用动态加载，则它取决于系统提供的样式。</p></li><li><p>什么是python库？<br>python库是python软件包的集合。如numpy，pandas，matplotlib，scikit-learn等。</p></li><li><p>拆分的用途是什么？<br>split（）用于分割给定的字符串。</p></li><li><p>在python中如何导入模块？<br>使用关键字import导入，有三种方式导入：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> array</span><br><span class="line"><span class="keyword">import</span> array <span class="keyword">as</span> arr</span><br><span class="line"><span class="keyword">from</span> array <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure></li><li><p>dict 的 items() 方法与 iteritems() 方法的不同？</p><p>items方法将所有的字典以列表方式返回，其中项在返回时没有特殊的顺序；</p><p>iteritems方法有相似的作用，但是返回一个迭代器对象</p></li><li><p>说明OS，sys模块的不同，并列举常用的模块方法</p><p>os：提供了一种方便的使用操作系统的方法</p><p>sys：可供访问由解释器使用或维护的变量和与解释器进行交互的函数</p><p>总结：os模块负责程序与操作系统的交互，提供了访问操作系统底层的接口;sys模块负责程序与python解释器的交互，提供了一系列的函数和变量，用于操控python的运行时环境。</p><p>os常用方法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">os.remove(‘path/filename’) #删除文件</span><br><span class="line">os.rename(oldname, newname) #重命名文件</span><br><span class="line">os.walk() #生成目录树下的所有文件名</span><br><span class="line">os.chdir(&#x27;dirname&#x27;) #改变目录</span><br><span class="line">os.mkdir/makedirs(&#x27;dirname&#x27;) #创建目录/多层目录</span><br><span class="line">os.rmdir/removedirs(&#x27;dirname&#x27;) #删除目录/多层目录</span><br><span class="line">os.listdir(&#x27;dirname&#x27;) #列出指定目录的文件</span><br><span class="line">os.getcwd() #取得当前工作目录</span><br><span class="line">os.chmod() #改变目录权限</span><br><span class="line">os.path.basename(‘path/filename’) #去掉目录路径，返回文件名</span><br><span class="line">os.path.dirname(‘path/filename’) #去掉文件名，返回目录路径</span><br><span class="line">os.path.join(path1[,path2[,...]]) #将分离的各部分组合成一个路径名</span><br><span class="line">os.path.split(&#x27;path&#x27;) #返回( dirname(), basename())元组</span><br><span class="line">os.path.splitext() #返回 (filename, extension) 元组</span><br><span class="line">os.path.getatime\ctime\mtime #分别返回最近访问、创建、修改时间</span><br><span class="line">os.path.getsize() #返回文件大小</span><br><span class="line">os.path.exists() #是否存在</span><br><span class="line">os.path.isabs() #是否为绝对路径</span><br><span class="line">os.path.isdir() #是否为目录</span><br><span class="line">os.path.isfile() #是否为文件</span><br></pre></td></tr></table></figure><p>sys常用方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sys.argv #命令行参数List，第一个元素是程序本身路径</span><br><span class="line">sys.modules.keys() #返回所有已经导入的模块列表</span><br><span class="line">sys.exc_info() #获取当前正在处理的异常类,exc_type、exc_value、exc_traceback当前处理的异常详细信息</span><br><span class="line">sys.exit(n) #退出程序，正常退出时exit(0)</span><br><span class="line">sys.hexversion #获取Python解释程序的版本值，16进制格式如：0x020403F0</span><br><span class="line">sys.version #获取Python解释程序的版本信息</span><br><span class="line">sys.maxint #最大的Int值</span><br><span class="line">sys.maxunicode #最大的Unicode值</span><br><span class="line">sys.modules #返回系统导入的模块字段，key是模块名，value是模块</span><br><span class="line">sys.path #返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值</span><br><span class="line">sys.platform #返回操作系统平台名称</span><br><span class="line">sys.stdout #标准输出</span><br><span class="line">sys.stdin #标准输入</span><br><span class="line">sys.stderr #错误输出</span><br><span class="line">sys.exc_clear() #用来清除当前线程所出现的当前的或最近的错误信息</span><br><span class="line">sys.exec_prefix #返回平台独立的python文件安装的位置</span><br><span class="line">sys.byteorder #本地字节规则的指示器，big-endian平台的值是&#x27;big&#x27;,little-endian平台的值是&#x27;little&#x27;</span><br><span class="line">sys.copyright #记录python版权相关的东西</span><br><span class="line">sys.api_version #解释器的C的API版本</span><br><span class="line">sys.stdin,sys.stdout,sys.stderr</span><br></pre></td></tr></table></figure></li><li><p>Python里面如何拷贝一个对象？deepcopy 和 copy的区别？</p><p>copy: 仅拷贝对象本身，而不拷贝对象中引用的其它对象;</p><p>deepcopy: 除拷贝对象本身，而且拷贝对象中引用的其它对象。</p></li><li><p>os.path和sys.path的区别？</p><p>os.path是module，包含了各种处理长文件名(路径名)的函数；</p><p>sys.path是由目录名构成的列表，Python 从中查找扩展模块( Python 源模块, 编译模块,或者二进制扩展)。 启动 Python 时,这个列表从根据内建规则,PYTHONPATH 环境变量的内容, 以及注册表( Windows 系统)等进行初始化。</p></li><li><p>re模块中match和search方法的不同？</p><p>match() 函数只检查 RE 是否在字符串开始处匹配，而search() 则是扫描整个字符串。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import re</span><br><span class="line">print(re.match(&#x27;super&#x27;, &#x27;superstition&#x27;).span()) #检查super在字符串superstition中是否匹配，因为superstition中的super字符串在开头，此时，返回super在superstition中的起止位置；.span（）返回一个包括匹配的起止位置元组</span><br><span class="line">(0,5)</span><br><span class="line">print(re.match(&#x27;super&#x27;,&#x27;insuperable&#x27;)) #因为super不在insuperable的开头，所以返回none</span><br><span class="line">None</span><br><span class="line">print(re.search(&#x27;super&#x27;,&#x27;superstition&#x27;).span())</span><br><span class="line">(0,5)</span><br><span class="line">print(re.search(&#x27;super&#x27;,&#x27;insuperable&#x27;).span())</span><br><span class="line">(2,7)</span><br></pre></td></tr></table></figure></li><li><p>解释生成器(generator)与函数的不同，并实现和使用简单generator？</p><p>生成器和函数的主要区别在于函数 return a value，生成器 yield a value同时标记或记忆point of the yield 以便于在下次调用时从标记点恢复执行。 yield 使函数转换成生成器，而生成器反过来又返回迭代器。生成器的优点在于处理比较大的列表时节约内存。</p><p>利用函数生成Fibonacci系列</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def fun(max): n为数量</span><br><span class="line">    a=[]</span><br><span class="line">    a.append(0)</span><br><span class="line">    a.append(1)</span><br><span class="line">    for i in range(max-2):</span><br><span class="line">        a.append(a[-1]+a[-2])</span><br><span class="line">    return a</span><br><span class="line">#主函数</span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">for m in fun(10):</span><br><span class="line">    print(m,end=&quot; &quot;)</span><br></pre></td></tr></table></figure><p>利用生成器生成Fibonacci系列</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def fun(max):</span><br><span class="line">n1=0 #第一个值</span><br><span class="line">n2=1 #第二个值</span><br><span class="line">num=0 #记录数量</span><br><span class="line">while num&lt;max:</span><br><span class="line">yield n1</span><br><span class="line">n1,n2=n2,n1+n2</span><br><span class="line">num+=1</span><br><span class="line">#主函数</span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">for n in fun(10):</span><br><span class="line">print(n,end=&quot; &quot;)</span><br></pre></td></tr></table></figure></li><li><p>解释一下 WSGI 和 FastCGI 的关系？</p><p>CGI全称是“公共网关接口”(CommonGateway Interface)，HTTP服务器与你的或其它机器上的程序进行“交谈”的一种工具，其程序须运行在网络服务器上。CGI可以用任何一种语言编写，只要这种语言具有标准输入、输出和环境变量。如php,perl,tcl等。</p><p>FastCGI像是一个常驻(long-live)型的CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去fork一次(这是CGI最为人诟病的fork-and-execute模式)。它还支持分布式的运算, 即 FastCGI 程序可以在网站服务器以外的主机上执行并且接受来自其它网站服务器来的请求。</p><p>FastCGI是语言无关的、可伸缩架构的CGI开放扩展，其主要行为是将CGI解释器进程保持在内存中并因此获得较高的性能。众所周知，CGI解释器的反复加载是CGI性能低下的主要原因，如果CGI解释器保持在内存中并接受FastCGI进程管理器调度，则可以提供良好的性能、伸缩性、Fail- Over特性等等。</p><p>WSGI的全称为： PythonWeb Server Gateway Interface v1.0 （Python Web 服务器网关接口），</p><p>它是 Python 应用程序和 WEB 服务器之间的一种接口。</p><p>它的作用，类似于FCGI 或 FASTCGI 之类的协议的作用。</p><p>WSGI 的目标，是要建立一个简单的普遍适用的服务器与 WEB 框架之间的接口。</p><p>Flup就是使用 Python 语言对 WSGI 的一种实现，是可以用于 Python 的应用开发中的一种工具或者说是一种库。</p><p>Spawn-fcgi是一个小程序，这个程序的作用是管理fast-cgi进程，那么管理wsgi进程也是没有问题的，功能和php-fpm类似。</p><p>故，简单地说，WSGI和FastCGI都是一种CGI，用于连接WEB服务器与应用程序，而WSGI专指Python应用程序。而flup是WSGI的一种实现，Spawn-fcgi是用于管理flup进程的一个工具，可以启动多个wsgi进程，并管理它们。</p></li><li><p>解释一下 Django 和 Tornado 的关系、差别（待解决）</p></li></ol><h2 id="OOPS面试问题"><a href="#OOPS面试问题" class="headerlink" title="OOPS面试问题"></a>OOPS面试问题</h2><ol><li><p>用一个例子解释python中的继承。</p><p> 继承允许一个类获取另一个类的所有成员（如属性和方法）。继承提供了代码可重用性，使创建和维护应用程序变得更加容易。我们继承的类称为超类，而继承的类称为派生/子类。</p><p> python支持的不同类型继承：</p><ol><li>单一继承：派生类获取某个超类的成员</li><li>多级继承：从基类base1继承的派生类的d1和从base2继承的d2</li><li>层级继承：从一个基类可以继承任意数量的子类</li><li>多重继承：派生类继承自多个基类</li></ol></li><li><p>如何在python中创建类？</p><p> 使用关键字class创建</p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ssp</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,age,sex</span>):<span class="comment">#self代表类的实例，是通过类创建的实例</span></span><br><span class="line">self.name=name</span><br><span class="line">self.age=age</span><br><span class="line">self.sex=sex</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">info</span>(<span class="params">self</span>):</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;姓名:&#123;0&#125;;年龄:&#123;1&#125;;性别:&#123;2&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;sex&quot;</span>))</span><br><span class="line">ssp=ssp(<span class="string">&quot;ssp&quot;</span>,<span class="string">&quot;24&quot;</span>,<span class="string">&quot;man&quot;</span>)</span><br><span class="line">ssp.name</span><br><span class="line"><span class="string">&#x27;ssp&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>python中的猴子补丁是什么？</p><p>  在Python中，术语“猴子补丁”仅指运行时对类或模块的动态修改。</p></li><li><p>python是否支持多重继承？</p><p> 多重继承意味着一个类可以从多个父类派生，python支持多重继承。</p></li><li><p>什么是python中的多态？</p><p> 多态性是指采取多种形式的能力。例如，如果父类具有一个名为ABC的方法，则子类也可以具有一个具有相同名称和参数的ABC方法。Python允许多态。</p></li><li><p>在python中定义封装？</p><p> 封装意味着将代码和数据绑定在一起。</p></li><li><p>如何在python中进行数据抽象？</p><p> 在python中可以使用接口和抽象类来实现。</p></li><li><p>python是否使用访问说明符？</p><p> 否！python不会剥夺对实例变量或函数的访问权限。python提出了在变量，函数或方法的名称前加上单下划线或双下划线的概念，类似于保护和私有访问说明符。</p></li><li><p>如何在python中创建一个空类？</p><p> 空类是在其块内未定义任何代码的类，可以使用空语句pass来创建。</p></li><li><p>object（）有什么作用？</p><p>返回一个无特征的对象，该对象是所有类的基础，而且，它不带任何参数。</p></li></ol><h2 id="基本的python程序"><a href="#基本的python程序" class="headerlink" title="基本的python程序"></a>基本的python程序</h2><ol><li><p>用python编写程序执行冒泡排序算法。</p><p> 冒泡算法：一次比较两个元素，如果他们的顺序错误就把他们交换过来。</p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">maopao</span>(<span class="params">a</span>):</span><br><span class="line"><span class="built_in">len</span>=<span class="built_in">len</span>(a)<span class="comment">#获取列表的长度</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>-<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> a[i]&gt;a[i+<span class="number">1</span>]:</span><br><span class="line">                <span class="comment">#c=a[i]</span></span><br><span class="line">                <span class="comment">#a[i]=a[i+1]</span></span><br><span class="line">                <span class="comment">#a[i+1]=c</span></span><br><span class="line">                a[i],a[i+<span class="number">1</span>]=a[i+<span class="number">1</span>],a[i]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">return</span> a</span><br></pre></td></tr></table></figure></li><li><p>用python编写程序生成星型三角形。</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def sjx(a):#a为三角形层数</span><br><span class="line">for i in range(a):</span><br><span class="line">print(&#x27; &#x27;*(a+1-i)+&#x27;*&#x27;*(2*i+1))</span><br><span class="line">sjx(9)</span><br></pre></td></tr></table></figure></li><li><p>编写程序用python生成Fibonacci系列。</p><p> Fibonacci系列：由0和1开始，之后的费波那契系数就由之前的两数相加。首几个费波那契系数是：0，1，1，2，3，5，8，13，21……</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=[]</span><br><span class="line">b=int(input())#生成多少个</span><br><span class="line">a.append(0)</span><br><span class="line">a.append(1)</span><br><span class="line">for i in range(b-2):</span><br><span class="line">a.append(a[-1]+a[-2])</span><br><span class="line">print(a) </span><br></pre></td></tr></table></figure><ol><li><p>用python编写程序检查数字是否为质数。</p><p> 质数：一个大于1的自然数，除了1和它自身外，不能被其他自然数整除的数叫做质数；否则称为合数。质数p的约数只有两个：1和p。</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a= int(input()) </span><br><span class="line">b=0</span><br><span class="line">for i in range(2,a-1):</span><br><span class="line">if a/i==int(a/i):</span><br><span class="line">b+=1</span><br><span class="line">else:</span><br><span class="line">b+=0</span><br><span class="line">if b==0:</span><br><span class="line">print(yes)</span><br><span class="line">else:</span><br><span class="line">print(no)</span><br></pre></td></tr></table></figure></li><li><p>用python编写程序以检查序列是否是回文。</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=input()</span><br><span class="line">b=a[::-1]</span><br><span class="line">if a==b:</span><br><span class="line">print(yes)</span><br><span class="line">else:</span><br><span class="line">print(no)</span><br></pre></td></tr></table></figure></li><li><p>编写一个单行，将计算文件中大写字母的数量。即使文件太大而无法容纳在内存中，您的代码也应该可以工作。</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f=open(&quot;lujing&quot;,&#x27;r&#x27;)</span><br><span class="line">a=f.readlines()</span><br><span class="line">count=0</span><br><span class="line">for i in a:</span><br><span class="line">for j in i:</span><br><span class="line">if j.isupper():</span><br><span class="line">count+=1</span><br><span class="line">##转换为单行</span><br><span class="line">count sum(1 for i in a for j in i if j.isupper())</span><br></pre></td></tr></table></figure></li></ol><ol><li><p>用python为数字数据集编写排序算法</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=input()</span><br><span class="line">c=a</span><br><span class="line">b=[]</span><br><span class="line">for in in range(len(a)-1):</span><br><span class="line">b.append(c.min())</span><br><span class="line">c.remove(c.min())</span><br><span class="line">b.append(a.max())</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 算法学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>科学上网搭建方法</title>
      <link href="/2022/07/18/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/"/>
      <url>/2022/07/18/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>声明：为了自主维护国内网络环境安全，请大家在享受上网的快乐时能够恪守好自己的底线，不要干违法犯罪的事情。谨记一条：要想人不知，除非己莫为！！！不要到了最后才追悔莫及。我们坚信：网络永远都不是法外之地。</strong></p><h2 id="为什么要“科学上网”？"><a href="#为什么要“科学上网”？" class="headerlink" title="为什么要“科学上网”？"></a>为什么要“科学上网”？</h2><h3 id="有感而发"><a href="#有感而发" class="headerlink" title="有感而发"></a>有感而发</h3><p>众所周知，国内外网络之间有一堵“墙”的存在，那也是我们很多时候不能直接访问国外网站的根本原因。首先，对于普通人来说，这堵“墙”的存在根本不影响我们正常的上网需求。在此，我必须声明一点：国外的月亮并没有我们想象的那么圆！！！国外的网络上并没有特别稀奇古怪的东西，反而偏见到显得很严重（就我自己所看到的而言，外面充斥着各种反华言论，而且里面的论据绝大部分都是他们捏造和凭空想象的，因此去看完全是玷污自己的眼球和三观，纯属自己给自己找恶心！！！虽然国内有着很多待发展和完善的地方，但我们要站在自己国家的立场上想想，外面的世界是残酷的，人与人是这样，国与国也更是这样。作为我们普通人来说，我们还可以找一个真心朋友说说真心话，但国与国之间只有利益。而在利益面前，只有强大才是永恒的真理。所以国家为了更好地保护好我们，只有让自己不断变得更加强大。而在变强的过程中，她是孤独的，也肯定会犯一些错误。然而，作为她的儿女，我们必须得对自己国家多一点宽容和时间，通过正规渠道及时帮她纠正错误，共同缔造属于中华民族的神话!!!</p><h3 id="翻过去有什么用？"><a href="#翻过去有什么用？" class="headerlink" title="翻过去有什么用？"></a>翻过去有什么用？</h3><p>首先，如果能够实现“科学上网”，你能浏览国外大部分网站（国内网站已经做的很好了，基本需求都可以被满足，国外也没有比国内好多少，外国的月亮并不比国内的圆）。本人由于学习需要，需要经常上<a href="%5BGitHub%5D(https://github.com/)">Github</a>上面去学习（搬运）代码，为了学习过程更加流畅和稳定，就产生了翻“墙”的需求。市面上虽然会有很多“梯子”售卖，但大多不稳定和不安全，因此，本人开始学习自己搭建梯子。本文是一个分享贴，也是自我学习的记录贴（其中记载了自己趟过的不少坑）。话不多说，咱们直接开始。</p><h1 id="如果搭建属于自己的“梯子”？"><a href="#如果搭建属于自己的“梯子”？" class="headerlink" title="如果搭建属于自己的“梯子”？"></a>如果搭建属于自己的“梯子”？</h1><p>首先，搭建属于自己的“梯子”需要下列几步：</p><ol><li><a href="#%E8%B4%AD%E4%B9%B0VPS%EF%BC%88%E5%9B%BD%E5%A4%96%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%89">购买VPS（国外服务器）</a></li><li><a href="#%E8%B4%AD%E4%B9%B0%E5%9F%9F%E5%90%8D">购买域名</a></li><li><a href="#%E9%83%A8%E7%BD%B2%E7%8E%AF%E5%A2%83%EF%BC%88%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%EF%BC%89">部署环境（服务器端）</a></li><li><a href="#%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%85%8D%E7%BD%AE">使用“梯子”（客户端）</a></li></ol><h2 id="购买VPS（国外服务器）"><a href="#购买VPS（国外服务器）" class="headerlink" title="购买VPS（国外服务器）"></a>购买VPS（国外服务器）</h2><p>我们需要购买一台服务器搭载我们的“梯子“项目。为了更加方便地完成项目，我们建议直接购买”墙“外的服务器（推荐香港）。然而现在服务器商也有很多，因此同等配置下，不同服务器商的价格也大不相同。怎么去选适合自己的就因人而异，不过我们建议新手还是选择国内大品牌的(理由很简单，实在折腾不成功可以申请退款，退款快也方便，这一点就很帅)。配置的话，我建议新手选个低配先玩玩就行，后面看需求升级配置，系统我选的（CentOS）。</p><p>购买完服务器后在服务器商的控制台上找到所购买的服务器，需要使用远程登陆软件（我使用的putty，进入<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/">putty官网</a>下载安装即可）（备注，建议先在控制台重置密码，重置密码后直接使用putty连接服务器即可</p><h2 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h2><p>为了更好地伪装我们的”梯子“，我们需要购买一个国内的域名（国外的价格贵，流程麻烦，转回国内还需要一大笔钱，别问我是怎么知道的，我只知道我的钱包又空了一大截），建议直接在同一服器商下购买，他会赠送一些服务，后面会省不少事。追求性价比的选个便宜的就行，一般10块左右就可以买一年了，相当便宜了。</p><p>购买完域名进入直接在控制台搜索DNS解析，然后进入选择添加域名，输入你所购买的域名，然后确定。然后选中你的域名，点击解析，不同服务器商弹出来的页面可能不一致，不过通常都是使用DNSPod解析或云解析，随便选一个就行点进去，然后选择快速添加解析，选择网站解析，网站地址中选择轻量应用服务器，输入你的服务器ip就行。最好接下来点一下ssl跟着提示正常提示申请一下ssl证书，选择免费证书就行。</p><h2 id="部署环境（服务器端）"><a href="#部署环境（服务器端）" class="headerlink" title="部署环境（服务器端）"></a>部署环境（服务器端）</h2><p>使用putty连接上服务器，具体怎么连接百度一下就行，过程贼简单，这就不多赘述。连上服务器后，我们可以跟着V2ray官网<a href="https://www.v2ray.com/">Project V · Project V 官方网站 (v2ray.com)</a>（不过被”墙了，需要通过“科学上网”的方式才能查看），不过接下来我会介绍主要的流程。</p><h3 id="同步时间"><a href="#同步时间" class="headerlink" title="同步时间"></a>同步时间</h3><p>这个很重要，建议一开始就进行，将服务器时间设为北京时间。具体做法为，在putty中输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date 查看当前服务器时间</span><br><span class="line">yum -y install nptdate  安装nptdate</span><br><span class="line">ntpdate -u 210.72.145.44  同步时间，210.72.145.44：中国国家授时中心的官方服务器</span><br><span class="line">date  查看修改后的时间是否为你电脑一致</span><br></pre></td></tr></table></figure><h3 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h3><p>安装相关依赖软件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum makecache</span><br><span class="line">yum install curl</span><br></pre></td></tr></table></figure><p>下载主程序安装脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/v2fly/fhs-install-v2ray/master/install-release.sh</span><br></pre></td></tr></table></figure><p>执行安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash install-release.sh</span><br></pre></td></tr></table></figure><p>等待安装结束，期间可能会有各种错误出来。本人建议把错误直接复制到百度即可解决绝大部分错误，本人亲测方便有效。解决完错误再重新安装就行，这个过程有可能是短暂的，有可能是煎熬的。安装成功后会出现以下界面，到这，恭喜你，成功一大半了。</p><p><img src="/./%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/1.png"></p><p>运行v2ray</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start v2ray</span><br><span class="line">systemctl enable v2ray 设置开机自启动</span><br></pre></td></tr></table></figure><p>查看v2ray是否运行成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status v2ray</span><br></pre></td></tr></table></figure><p>出现以下界面即可运行成功，特别注意显示Active :active(running)才是正常运行状态</p><p><img src="/./%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/2.png"></p><h3 id="服务器配置"><a href="#服务器配置" class="headerlink" title="服务器配置"></a>服务器配置</h3><p>输入命令行<code>v2ray</code>即可出现下列界面，然后输入对应的数字即可完成对应的命令!</p><p><img src="/./%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/3.png"></p><p>我们选择修改 V2Ray 配置中的修改 V2Ray 传输协议，然后选择其中一种协议即可（并不是所有的协议都可用，这里建议多试几个），具体操作就是输入2–&gt;2–&gt;输入你选择的协议数字</p><p>选择好协议后输入<code>v2ray  URL</code>,即可生成url，把它复制下来，后面有用</p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>进入v2ray官网<a href="https://www.v2ray.com/awesome/tools.html">神一样的工具们 · Project V 官方网站 (v2ray.com)</a>下载V2RayN，或者直接百度下载V2RayN应该也可以。下载后解压到一个文件夹，找到文件夹内的v2rayn.exe文件，双击打开，在左上角服务器栏选择从剪切板导入批量URL，导入后你就能查看你的服务器了，然后在主界面选中你的服务器，右键选择测试服务器速度，如果后面显示出有网速，那么恭喜你，大功告成了！右键v2ray小图标，选择服务器，选择自动配置系统代理就可以“科学上网”了。（每次退出的时候记得清除系统代理）</p><p>（plus：手机端也可以使用，下载v2rayNG安装到手机，然后也是导入URL就行）</p><p>避坑建议：</p><ol><li>测试服务器网速时显示0M/s，去前面更换协议就行，多试几个</li><li>在购买的服务器上把常用的端口都打开，具体做法百度以下就行，很简单，在域名管理里面的防火墙设置里面</li><li>实在搞不出来的可以多看看其他博客，相互映照，也可以给自己放个假，隔两天再来。不要害怕失败，我当初也是搞了十几天才成功搭建出来的，当初我也是一个纯小白入手，遇到的坑数不胜数，回想起来都一脸辛酸泪呀，不过这个过程还是很有意义的，很能锻炼我们自主学习的能力的。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 自主学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> self-learning、科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+butterfly博客学习</title>
      <link href="/2022/07/14/hexo+butterfly%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/07/14/hexo+butterfly%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4f192a617ae887ca30f66cf34911a10bdc65d5f00b304b33760c6ab6a551273c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请在此处输入密码，提示词：深仔lord</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 自主学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> self-learning、博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
