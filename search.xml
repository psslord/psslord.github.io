<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>科学上网搭建方法</title>
      <link href="/2022/07/18/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/"/>
      <url>/2022/07/18/%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E6%90%AD%E5%BB%BA%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo+butterfly博客学习</title>
      <link href="/2022/07/14/hexo+butterfly%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/07/14/hexo+butterfly%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="第一部分：完成一个博客上传"><a href="#第一部分：完成一个博客上传" class="headerlink" title="第一部分：完成一个博客上传"></a>第一部分：完成一个博客上传</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><p>首先的在一个空文件夹里面初始化hexo环境，具体做法：点开空文件夹，鼠标右键点击git bash here，然后输入命令 hexo init和hexo install即可完成环境初始化。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line">hexo install</span><br></pre></td></tr></table></figure><h2 id="新建博客"><a href="#新建博客" class="headerlink" title="新建博客"></a>新建博客</h2><p>完成初始化后我们转到所在目录即可进行接下来的操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd +目录名</span><br></pre></td></tr></table></figure><p>接下来我们新建一个博客，输入命令“hexo new 第一篇博客”即可生成初始文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new 第一篇博客</span><br></pre></td></tr></table></figure><h2 id="博客内容"><a href="#博客内容" class="headerlink" title="博客内容"></a>博客内容</h2><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: test</span><br><span class="line">date: 2022-07-14 16:53:45</span><br><span class="line">tags: self-learning </span><br><span class="line">categories:</span><br><span class="line">- learning</span><br><span class="line">---</span><br><span class="line">摘要名称</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">接下来是文章摘要的正文内容</span><br></pre></td></tr></table></figure><p>包括博客里面重要的内容，如题目、作者、分类、标签等，这里需要注意的是空格，即在标点后面需要添加空格，如冒号： 空格 。这部分还可以添加文章的摘要，添加格式如上所述。</p><h3 id="资源引用"><a href="#资源引用" class="headerlink" title="资源引用"></a>资源引用</h3><p>当引用图片或其他形式的资源等，有以下两种方式解决：</p><p>1.使用绝对路径引用</p><p>2.使用相对路径引用</p><p>使用相对路径引用资源的时候，我们可以使用hexo提供的资源文件夹功能。</p><p>打开根目录下的_config.yml文件,将post_asset_folderde的值设为true</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>修改之后会开启 Hexo 的文章资源文件管理功能。Hexo 将会在我们每一次通过 <code>hexo new &lt;title&gt;</code> 命令创建新文章时自动创建一个同名文件夹，于是我们便可以将文章所引用的相关资源放到这个同名文件夹下，然后通过相对路径引用。例如，你把一个 <code>example.jpg</code> 图片放在了这个同名文件夹中，使用相对路径的常规 markdown 语法 <code>![](./example.jpg)</code>即可访问 。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![](./式28.jpg)</span><br></pre></td></tr></table></figure><h2 id="文章上传"><a href="#文章上传" class="headerlink" title="文章上传"></a>文章上传</h2><h2 id="本地查看"><a href="#本地查看" class="headerlink" title="本地查看"></a>本地查看</h2><p>运行下列语句</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo cl或者hexo c或者hexo clean</span><br><span class="line">hexo g或者hexo generate(可省略)</span><br><span class="line">hexo s或者hexo server</span><br></pre></td></tr></table></figure><p>接下来访问它出现的<a href="http://localhost:4000/">网址</a>即可查看最新更改的内容</p><h2 id="上传GitHub"><a href="#上传GitHub" class="headerlink" title="上传GitHub"></a>上传GitHub</h2><p>运行下列语句即可完成上传</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo cl或者hexo c或者hexo clean</span><br><span class="line">hexo g或者hexo generate</span><br><span class="line">hexo d或者hexo deploy</span><br></pre></td></tr></table></figure><p>上传后有延迟，需要等待几分钟后刷新网页才会出现新更改的内容。</p><p>PLus：上传的时候用校园网一直上传不上去，改用手机热点即可上传成功！！</p><hr><h1 id="第二部分：文章加密"><a href="#第二部分：文章加密" class="headerlink" title="第二部分：文章加密"></a>第二部分：文章加密</h1><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p><code>npm install --save hexo-blog-encrypt</code></p><h2 id="设置配置文件"><a href="#设置配置文件" class="headerlink" title="设置配置文件"></a>设置配置文件</h2><ol><li><p>首先在站点配置文件中启动该插件，即打开根目录下的_congfig.yml文件修改以下选项</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure></li><li><p>然后再在front-matter中添加对应的字段，如password，abstract，message等</p></li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: 文章加密</span><br><span class="line">date: 2019-01-04T22:20:13.000Z</span><br><span class="line">category: 教程</span><br><span class="line">tags:</span><br><span class="line">  - 博客</span><br><span class="line">  - Hexo</span><br><span class="line">keywords: 博客文章密码</span><br><span class="line">password: TloveY</span><br><span class="line">abstract: 密码：TloveY</span><br><span class="line">message:  输入密码，查看文章</span><br></pre></td></tr></table></figure><ul><li>keyword: 关键字</li><li>password：密码</li><li>abstract：文章摘要</li><li>message：博客查看时，密码输入框上面的描述性文字</li></ul><hr><h1 id="第三部分：更改主题"><a href="#第三部分：更改主题" class="headerlink" title="第三部分：更改主题"></a>第三部分：更改主题</h1><p>##butterfly<br>其实最好的使用提示就是查看其官方文档<a href="https://butterfly.js.org/">Butterfly</a></p><p>这里面已经很详细了，不过我在这还是简单地介绍一下大致流程可以帮我们更好地理解和使用。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li><p>Git安装（GitHub）（稳定版）</p><p>在根目录下打开命令行或者右键选择Git Bash Here,接下来输入下列命令</p><p><code>git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</code></p></li><li><p>Git安装（Gitee）（稳定版）</p><p>在根目录下打开命令行或者右键选择Git Bash Here,接下来输入下列命令</p><p><code>git clone -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</code></p></li></ol><p>3.npm安装<br>   在根目录下打开命令行或者右键选择Git Bash Here,接下来输入下列命令<br>   <code>npm i hexo-theme-butterfly</code></p><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p>修改根目录下的_config.yml文件，把主题改为butterfly<br>   <code>theme:butterfly</code></p><h3 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h3><p>建议把这两条命令都运行一次</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><h3 id="升级建议"><a href="#升级建议" class="headerlink" title="升级建议"></a>升级建议</h3><p>在根目录下创建_config.butterfly.yml文件，并把themes文件夹下的butterfly子文件中的_congfig.yml内容复制到所创建的_config.butterfly.yml文件中去，注意这里的_config.yml文件不是根目录下的那个。完成后hexo会自动合并主题中的_config.yml文件和_config.butterfly.yml（优先级更高）文件中的配置</p><h3 id="主题使用建议pages"><a href="#主题使用建议pages" class="headerlink" title="主题使用建议pages"></a>主题使用建议pages</h3><p>详细阅读_config.butterfly.yml文件中的内容，里面重要的设置都有备注，不懂的地方可以跟着官方文档<a href="https://butterfly.js.org/posts/dc584b87/">butterfly</a>过一遍应该就差不多懂了</p><h1 id="自定义博客封面和背景"><a href="#自定义博客封面和背景" class="headerlink" title="自定义博客封面和背景"></a>自定义博客封面和背景</h1><p>有两种方式可以设置封面和背景，一种是在_congfig.butterfly.yml文件里修改，另一种是在每个博客的front-matter中定义，在这我推荐第二种方式，可以每篇文章设置不同的封面和背景</p><p>在front-matter中添加内容如下：</p><ul><li><p><code>top_img: 图片地址</code>  博客顶端背景</p></li><li><p><code>cover: 图片地址</code>文章封面</p></li></ul><h1 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h1><p>为了方便更好地访问我们的博客，我们可以在国内买一个域名（便宜的几块钱一年）绑定到我们的github上即可，具体步骤如下：</p><ol><li><p>在GitHub上打开你博客的所在项目，然后在setting–&gt;pages–&gt;custom domain输入你购买的域名，然后save即可</p></li><li><p>在根目录下的source文件夹下新建一个CNAME文件（没有后缀名），然后把你的域名填进去就行</p></li><li><p>修改根目录下的_config.yml文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">skip_render: CNAME</span><br></pre></td></tr></table></figure></li></ol><p>之后正常上传就好了</p>]]></content>
      
      
      <categories>
          
          <category> learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> self-learning </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
